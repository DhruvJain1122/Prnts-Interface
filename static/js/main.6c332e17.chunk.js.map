{"version":3,"sources":["utils/config.js","assets/images/profile.png","assets/images/default-profile.jpg","assets/images/prnts-logo.png","assets/images/coinbase-wallet-logo.svg","assets/images/Intro-image2.jpg","assets/images/matic-token-icon.webp","ethereum/web3.js","ethereum/LensHub.js","components/Header/Header.js","ethereum/PrntNFTData.js","components/Home/Body.js","components/Artworks/Card/Card.js","views/Artworks.js","views/Home.js","components/Artists/Card.js","views/Artists.js","components/ProfilePage/Profile.js","App.js","components/ProfilePage/About.js","ethereum/PrntNFTFactory.js","components/ProfilePage/Creations.js","ethereum/PrntNFTMarketplace.js","components/ProfilePage/Collections.js","components/ProfilePage/Nav.js","views/ProfilePage.js","components/Art/Bids/Bids.js","hooks/useModal.js","components/Art/ApproveModal/ApproveModal.js","views/Art.js","ethereum/MockProfileCreationProxy.js","views/Create.js","components/EditProfile/ProfilePic.elements.js","components/EditProfile/ProfilePic.js","views/EditProfile.js","views/RequestForApproval.js","utils/ProtectedRoute.js","components/Footer/Footer.js","components/Create/NotApproved/NotApproved.js","serviceWorker.js","index.js"],"names":["module","exports","rejectedCards","web3","window","Web3","currentProvider","provider","providers","HttpProvider","instance","eth","Contract","LensHub","abi","Header","account","isMobile","checkHasProfile","useState","dropdownOpen","setDropdownOpen","refreshPage","a","location","reload","Navbar","Wrapper","styled","nav","Logo","div","Items","ul","Item","li","MobileNavbar","console","log","exact","to","src","prntsLogo","style","height","width","className","onClick","color","display","padding","activeClassName","margin","right","position","defaultProps","title","PrntNFTData","Body","latestMint","setLatestMint","tokenURI","setTokenURI","editionToBuy","setEditionToBuy","listArtworks","methods","getAllPrnts","call","list","length","fetch","tokenUri","json","then","resp","fetchEditionToBuy","editions","attributes","value","i","getOwnerOfToken","useEffect","imageHash","alt","Card","imageUrl","artistName","price","username","Artworks","listItems","setlistItems","promises","map","items","res","tokensByAddress","prntPrice","status","ownerArray","creator","rejectCards","key","name","symbol","utils","fromWei","catch","err","Promise","all","listitems","reverse","Home","description","ethAddress","address","slice","fontSize","profile_image","profile","default_profile","Artists","listArtists","setlistArtists","getAllArtists","artists","url","axios","get","data","userData","pfpHash","error","Profile","Id","copied","setCopied","text","onCopy","setTimeout","About","about","PrntNFTFactory","Creations","id","useParams","listCreations","setlistCreations","refresh","getCreations","creations","prnt","prntNFT","PrntNFTMarketplace","Collections","listCollections","setlistCollections","getCollections","collections","len","Nav","require","ProfilePage","user","setUser","getUserData","history","createBrowserHistory","path","component","Bids","by","useModal","withRouter","isShowing","hide","tokenId","PRNT_NFT_MARKETPLACE","isApproved","totalOwners","Approving","setApproving","Trading","setTrading","newPrice","setnewPrice","onApprove","setApprovalForAll","send","from","alert","onOpenTrade","openTrade","toWei","openTradeWhenCreateNewPrntNFT","ReactDOM","createPortal","Fragment","aria-modal","aria-hidden","tabIndex","role","e","stopPropagation","type","data-dismiss","aria-label","alignSelf","justifySelf","disabled","placeholder","onChange","target","document","body","setIsShowing","toggle","LinkToProfile","Link","Art","useHistory","setprnt","settotalOwners","setstatus","setPRNT_NFT_MARKETPLACE","setlistBids","Loading","setLoading","setInstance","setIsApproved","setOwnerArray","setprntPrice","settokenURI","setListEditions","setCreator","getPrnt","getPrntByNFTAddress","getTrade","trade","prntNFTMarketplace","PrntNFT","isApprovedForAll","onBuy","event","preventDefault","buyPrntNFT","gas","listBids","no_of_editions","listEditions","push","listNoOfEditions","getCreatorData","maxWidth","gridGap","gap","flexFlow","justifyContent","alignItems","textAlign","Grid","container","item","MockProfileCreationProxy","FormData","Create","pinataSecretApiKey","process","setname","setsymbol","setdescription","royalties","setRoyalties","setEditions","setprice","videoHash","setImageHash","imageUpload","setimageUpload","selectedImage","setselectedImage","pinImageToIPFS","append","post","maxContentLength","headers","_boundary","pinata_api_key","pinata_secret_api_key","IpfsHash","onCreateNewNFT","config","inputStruct","handle","imageURI","followModule","followModuleData","followNFTURI","proxyCreateProfile","onSubmit","accept","files","min","step","max","required","fontFamily","marginTop","Container","Preview","Text","UploadButton","ProfilePic","setSelectedImage","previewUrl","setPreviewUrl","setImageUpload","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","current","click","TextArea","textarea","EditProfile","url_get","editUserProfile","patch","wrap","maxLength","Form","form","Input","input","RequestForApproval","twitter","instagram","email","website","other","links","setLinks","setDescription","doRequestExist","setDoRequestExist","getRequestData","request","sendApprovalRequest","url_post","ApprovalRequest","ProtectedRoute","isAuth","Component","ExtraComponent","extraComponent","rest","render","props","pathname","state","Footer","size","NotApproved","isRequestSent","setIsRequestSent","getIsRequestSent","marginBottom","infuraId","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","1","4","137","80001","WalletLink","logo","coinbaseLogo","appName","networkUrl","chainId","connector","_","walletLink","makeWeb3Provider","enable","web3Modal","Web3Modal","cacheProvider","networks","polygon","Number","toString","chainName","nativeCurrency","decimals","rpcUrls","blockExplorerUrls","polygon_mumbai","changeNetwork","networkName","setError","ethereum","Error","method","params","message","App","setaccount","windowDimension","setWindowDimension","setIsMobile","setChainId","handleNetworkSwitch","fetchChainId","IsMobile","onConnectWallet","getAccounts","accounts","getAccount","innerWidth","handleResize","addEventListener","removeEventListener","fetchAccount","on","listenMMAccount","removeListener","cachedProvider","connect","setProvider","getChainId","payload","useAsync","balanceOf","loading","onDisconnect","givenProvider","close","clearCachedProvider","networkChanged","Box","CircularProgress","backgroundColor","boxShadow","borderBottomLeftRadius","borderBottomRightRadius","top","zIndex","href","borderRadius","left","zoom","fontWeight","Boolean","hostname","match","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6c332e17.chunk.js","sourcesContent":["const rejectedCards = [\r\n  \"0x2709d78bb5daEb0b9EABE4c06915C7642CB1C082\",\r\n  \"0x155a983cCc4a9341B29d5B00228CcBEB632D5238\",\r\n];\r\n\r\nmodule.exports = { rejectedCards };\r\n","module.exports = __webpack_public_path__ + \"static/media/profile.3d48bf6e.png\";","module.exports = __webpack_public_path__ + \"static/media/default-profile.e1648d04.jpg\";","module.exports = __webpack_public_path__ + \"static/media/prnts-logo.4b56c01c.png\";","module.exports = __webpack_public_path__ + \"static/media/coinbase-wallet-logo.2784f954.svg\";","module.exports = __webpack_public_path__ + \"static/media/Intro-image2.a28c4350.jpg\";","module.exports = __webpack_public_path__ + \"static/media/matic-token-icon.3cb96389.webp\";","import Web3 from \"web3\";\r\n\r\nlet web3;\r\n\r\nif (typeof window !== \"undefined\" && typeof window.web3 !== \"undefined\") {\r\n  //We are in the browser and metamask is running.\r\n  web3 = new Web3(window.web3.currentProvider);\r\n} else {\r\n  const provider = new Web3.providers.HttpProvider(\r\n    // \"https://rinkeby.infura.io/v3/cd3a366ba9b347849d4220811f39b339\"\r\n    \"https://polygon-mumbai.g.alchemy.com/v2/ndxfvGkVO78DZlLPGl0sH0CrOgqOKiq-\"\r\n    // \"https://polygon-mainnet.g.alchemy.com/v2/ndxfvGkVO78DZlLPGl0sH0CrOgqOKiq-\"\r\n  );\r\n  web3 = new Web3(provider);\r\n}\r\n\r\nexport default web3;\r\n","import web3 from \"./web3\";\r\nimport LensHub from \"./build/LensHub.json\";\r\n\r\nconst instance = new web3.eth.Contract(\r\n  LensHub.abi,\r\n  \"0xF6BF84E5df229029C9D36dC7ABaCDBE9c0bd7b4F\"\r\n);\r\n\r\nexport default instance;\r\n","import React, { useState } from \"react\";\r\nimport { FaBars } from \"react-icons/fa\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n// import MetaMaskOnboarding from '@metamask/onboarding'\r\n// import web3 from '../ethereum/web3';\r\nimport styled from \"styled-components\";\r\nimport \"./Dropdown.css\";\r\nimport LensHub from \"../../ethereum/LensHub\";\r\nimport prntsLogo from \"../../assets/images/prnts-logo.png\";\r\nimport web3 from \"../../ethereum/web3\";\r\nimport { useMemo } from \"react\";\r\nimport { useAsync } from \"react-use\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Header = ({ account, isMobile,checkHasProfile }) => {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const refreshPage = async () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  const Navbar = {\r\n    Wrapper: styled.nav`\r\n      width: inherit;\r\n      height: 86px;\r\n      padding: 10px 10px 10px 30px;\r\n      display: flex;\r\n      color: white;\r\n      align-items: center;\r\n      justify-content: space-around;\r\n    `,\r\n    Logo: styled.div`\r\n      // padding: 1.5rem 1rem;\r\n      // padding: 15px 0px;\r\n      color: black;\r\n      /* margin-top: 2px; */\r\n      padding: 10px 0px;\r\n      // margin-bottom: 10vh;\r\n      // top: 2vh;\r\n      // position: absolute;\r\n    `,\r\n    Items: styled.ul`\r\n      top: 70px;\r\n      position: absolute;\r\n      width: 80%;\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      justify-content: space-evenly;\r\n      align-items: center;\r\n      list-style: none;\r\n      // box-shadow: 5px 5px 12px #e0e5e6,\r\n      //           -5px -5px 12px #f2f9fa;\r\n      // padding: 10px 10px;\r\n      // border-radius: 50px;\r\n      padding: 20px 0px;\r\n    `,\r\n    Item: styled.li`\r\n      //   padding: 0 1rem;\r\n      //   cursor: pointer;\r\n      padding: 12px 24px;\r\n      color: black;\r\n      font-weight: bolder;\r\n      border-radius: 24px;\r\n      background: rgb(233 239 240);\r\n      box-shadow: 5px 5px 13px #e6e6e6, -5px -5px 13px #f4f4f4;\r\n    `,\r\n  };\r\n\r\n  const MobileNavbar = {\r\n    Wrapper: styled(Navbar.Wrapper)`\r\n      height: 120px;\r\n      width: 100vw;\r\n      background: rgb(233 239 240);\r\n      justify-content: center;\r\n      padding: 10px 10px;\r\n      // margin-top: 8vh;\r\n      position: sticky;\r\n      position: -webkit-sticky;\r\n      top: 0;\r\n      z-index: 1;\r\n    `,\r\n    Logo: styled(Navbar.Logo)`\r\n      // padding: 0.5rem 1rem;\r\n      padding: 10px 0px;\r\n      margin-top: -50px;\r\n      // color: black;\r\n      font-size: 18px;\r\n      // font-style: italic;\r\n      // margin-top: 0px;\r\n    `,\r\n    Items: styled(Navbar.Items)`\r\n      flex: 1;\r\n      padding: 0 0.3rem;\r\n      // padding: 30px 0px;\r\n      justify-content: space-around;\r\n    `,\r\n    Item: styled(Navbar.Item)`\r\n      padding: 8px 12px;\r\n      font-size: 12px;\r\n      border-radius: 15px;\r\n    `,\r\n  };\r\n  // const checkHasProfile=0;\r\n  // console.log(checkHasProfile)\r\n  // useEffect(() => {\r\n  //   console.log(\"checkHasProfile\")\r\n  //   console.log(checkHasProfile)\r\n  \r\n    \r\n  // }, [checkHasProfile])\r\n  \r\n  \r\n  console.log(checkHasProfile)\r\n  return (\r\n    <div>\r\n      {\r\n        isMobile ? (\r\n          <MobileNavbar.Wrapper>\r\n            <NavLink exact to=\"/\">\r\n              <MobileNavbar.Logo>\r\n                <img\r\n                  src={prntsLogo}\r\n                  style={{\r\n                    height: \"35px\",\r\n                    width: \"auto\",\r\n                  }}\r\n                />\r\n              </MobileNavbar.Logo>\r\n            </NavLink>\r\n\r\n            <MobileNavbar.Items className=\"nav-links\">\r\n              {!(account === \"\" || typeof account === \"undefined\") ? (\r\n                <div\r\n                  className=\"dropdown\"\r\n                  onClick={() => setDropdownOpen(!dropdownOpen)}\r\n                >\r\n                  <FaBars color=\"black\" className=\"dropbtn\" />\r\n                  <div\r\n                    className=\"dropdown-content\"\r\n                    style={{\r\n                      display: dropdownOpen ? \"grid\" : \"none\",\r\n                    }}\r\n                  >\r\n                    <div>\r\n                      <div onClick={refreshPage}>\r\n                        <Link to={`/profile/${account}`}>\r\n                          <h4\r\n                            // className=\"link-2\"\r\n                            style={{\r\n                              padding: \"10px 20px\",\r\n                            }}\r\n                          >\r\n                            Profile\r\n                          </h4>\r\n                        </Link>\r\n                      </div>\r\n                      {/* <hr style={{ margin: '0px 10px 0px 10px' }} /> */}\r\n                      <div>\r\n                        <Link to=\"/create\">\r\n                          <h4\r\n                            // className=\"link-2\"\r\n                            style={{\r\n                              padding: \"10px 20px\",\r\n                            }}\r\n                          >\r\n                            Create\r\n                          </h4>\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : null}\r\n\r\n              {/* <h4\r\n                style={{\r\n                  color: 'black',\r\n                  fontStyle: 'italic',\r\n                }}\r\n              >\r\n                PRNTS\r\n              </h4> */}\r\n\r\n              <NavLink exact to=\"/home\" activeClassName=\"selected\">\r\n                <MobileNavbar.Item className=\"lnk\">Home</MobileNavbar.Item>\r\n              </NavLink>\r\n              <NavLink exact to=\"/\" activeClassName=\"selected\">\r\n                <MobileNavbar.Item className=\"lnk\">Projects</MobileNavbar.Item>\r\n              </NavLink>\r\n              <NavLink exact to=\"/community\" activeClassName=\"selected\">\r\n                <MobileNavbar.Item className=\"lnk\">Community</MobileNavbar.Item>\r\n              </NavLink>\r\n              {/* {\r\n                account === null\r\n                ?\r\n                <ConnectWallet isMobile={isMobile} account={account} />\r\n                :\r\n                null\r\n            }\r\n             */}\r\n            </MobileNavbar.Items>\r\n          </MobileNavbar.Wrapper>\r\n        ) : (\r\n          <div>\r\n            <Navbar.Wrapper className=\"header\">\r\n              <NavLink exact to=\"/\">\r\n                <Navbar.Logo className=\"prnts-logo\">\r\n                  <img\r\n                    src={prntsLogo}\r\n                    style={{\r\n                      height: \"45px\",\r\n                      width: \"auto\",\r\n                    }}\r\n                  />\r\n                </Navbar.Logo>\r\n              </NavLink>\r\n\r\n              <Navbar.Items className=\"nav-links\">\r\n                {/* <Navbar.Item className=\"link-1\">\r\n                                    <NavLink \r\n                                        exact\r\n                                        to='/' \r\n                                        activeClassName=\"selected\"\r\n                                    > Home </NavLink>\r\n                                </Navbar.Item>\r\n                                <Navbar.Item className=\"link-1\">Music</Navbar.Item>\r\n                                <Navbar.Item className=\"link-1\">Artists</Navbar.Item> */}\r\n                <NavLink exact to=\"/home\" activeClassName=\"selected\">\r\n                  <h3 className=\"link-1\">Home</h3>\r\n                </NavLink>\r\n                <NavLink exact to=\"/\" activeClassName=\"selected\">\r\n                  <h3 className=\"link-1\">Projects</h3>\r\n                </NavLink>\r\n                <NavLink exact to=\"/community\" activeClassName=\"selected\">\r\n                  <h3 className=\"link-1\">Community</h3>\r\n                </NavLink>\r\n              </Navbar.Items>\r\n            </Navbar.Wrapper>\r\n            <div\r\n              style={{\r\n                margin: \"0px 0px 20px 10px\",\r\n                right: \"10px\",\r\n                position: \"relative\",\r\n              }}\r\n            >\r\n              {account === \"\" || typeof account === \"undefined\" ? null : ( // <ConnectWallet isMobile={isMobile} account={account} /> // <button className=\"btn\" id=\"connect wallet\">Connect Wallet</button>\r\n                <div className=\"profile-links\">\r\n                  {checkHasProfile > 0 ? \r\n                  (<div onClick={refreshPage}>\r\n                    <Link to={`/profile/${account}`}>\r\n                      <h4 className=\"link-2\">Profile</h4>\r\n                    </Link>\r\n                  </div>)\r\n                : <div>\r\n                <Link to=\"/create\">\r\n                  <h4 className=\"link-2\">+Create</h4>\r\n                </Link>\r\n              </div>}\r\n                  \r\n                  {/* <ConnectWallet isMobile={isMobile} account={account} /> */}\r\n                </div>\r\n              )}\r\n\r\n              {/* <div className=\"profile-links\">\r\n                <div onClick={refreshPage}>\r\n                    <Link to={`/profile/${account}`}><h4 className=\"link-2\" >Profile</h4></Link> \r\n                </div>\r\n                <div>\r\n                    <Link to='/create'><h4 className=\"link-2\">+Create</h4></Link>\r\n                </div>\r\n            </div>\r\n            <ConnectWallet isMobile={isMobile} account={account} /> */}\r\n            </div>\r\n          </div>\r\n        )\r\n\r\n        // (<header className='header'>\r\n        //     {/* <h3 style={headingStyle}>{props.title}</h3> */}\r\n        //     <Link to='/'>\r\n        //         {/* <img style={{zoom: \"15%\"}} src={logo} alt=\"\" /> */}\r\n        //         <h1 style={logoStyle}><i>PRNTS</i></h1>\r\n        //     </Link>\r\n\r\n        //     <div className='nav-links'>\r\n        // <NavLink\r\n        //     exact\r\n        //     to='/'\r\n        //     activeClassName=\"selected\"\r\n        // >\r\n        //     <h3 className=\"link-1\">Home</h3>\r\n        // </NavLink>\r\n        // <NavLink\r\n        //     exact\r\n        //     to='/music'\r\n        //     activeClassName=\"selected\"\r\n        // >\r\n        //     <h3 className=\"link-1\">Music</h3>\r\n        // </NavLink>\r\n        // <NavLink\r\n        //     exact\r\n        //     to='/community'\r\n        //     activeClassName=\"selected\"\r\n        // >\r\n\r\n        //     <h3 className=\"link-1\">Artists</h3>\r\n        // </NavLink>\r\n        //     </div>\r\n        // <div>\r\n        // {\r\n        //     showConnect\r\n        //     ?\r\n        //     <button className=\"btn\" id=\"connect wallet\">Connect Wallet</button>\r\n        //     :\r\n        //     <div className=\"profile-links\">\r\n        //         <div onClick={refreshPage}>\r\n        //             <Link to={`/profile/${account}`}><h4 className=\"link-2\" >Profile</h4></Link>\r\n        //         </div>\r\n        //         <div>\r\n        //             <Link to='/create'><h4 className=\"link-2\">+Create</h4></Link>\r\n        //         </div>\r\n        //     </div>\r\n        // }\r\n        // </div>\r\n        // </header>)\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: \"Music Nfts\",\r\n};\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\n// const logoStyle = {\r\n//     color: 'black',\r\n//     letterSpacing: -2\r\n// }\r\n\r\nexport default Header;\r\n","import web3 from \"./web3\";\r\nimport PrntNFTData from \"./build/PrntNFTData.json\";\r\n\r\nconst instance = new web3.eth.Contract(\r\n  PrntNFTData.abi,\r\n  // '0xf8bbaDaa46570b033f753922757516b785fc5e63'\r\n  // '0x3A22b0B805EbeCdd5a4A66352979A505fe1348D0'\r\n  // '0x55b9eE9C647eCE7d86C9B90a0209C14a5f802eea'\r\n  // '0x021a4474139Aa2E008d9A73ce56D58433c76fdB7'\r\n  // '0xB4A1faB075DD1881Eda6057F2660e67B683Ac810'\r\n  // '0x66Ff614aF38a8F698F7E7Dc691EE3360bF0a4cb7'\r\n\r\n  //rinkeby\r\n  // \"0x0745D5DF3bF924EABA78407533ED3fE04B34b9B9\"\r\n  // \"0xA225b66aea642547805f2718029fb22905F6BeC3\"\r\n  // \"0x5a040467943E17479121762498644ca9611ea6F4\"\r\n\r\n  // mumbai\r\n  // \"0xB4A1faB075DD1881Eda6057F2660e67B683Ac810\"\r\n\r\n  // Mainnet v1.0\r\n  \"0x49A6E2d1F19DF18570A475D34Ac1Fa2dc5365203\"\r\n);\r\n\r\nexport default instance;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport introImg from \"../../assets/images/Intro-image2.jpg\";\r\nimport PrntNFTData from \"../../ethereum/PrntNFTData\";\r\n\r\nconst Body = () => {\r\n  const [latestMint, setLatestMint] = useState();\r\n  const [tokenURI, setTokenURI] = useState();\r\n  const [editionToBuy, setEditionToBuy] = useState();\r\n\r\n  const listArtworks = async () => {\r\n    try {\r\n      const list = await PrntNFTData.methods.getAllPrnts().call();\r\n      setLatestMint(list[list.length - 1]);\r\n      console.log(\"list: \", list);\r\n\r\n      const res = await fetch(list[list.length - 1].tokenUri);\r\n      res.json().then((resp) => {\r\n        console.log(\"token uri\", resp);\r\n        setTokenURI(resp);\r\n      });\r\n    } catch (err) {\r\n      if (err) console.log(err);\r\n    }\r\n  };\r\n\r\n  const fetchEditionToBuy = async () => {\r\n    const editions = tokenURI?.attributes[0].value;\r\n    console.log(\"ediitons: \", editions);\r\n    for (let i = 1; i <= editions; i++) {\r\n      const ownerArray = await PrntNFTData.methods\r\n        .getOwnerOfToken(latestMint[0], i)\r\n        .call();\r\n      if (ownerArray.length === 1) {\r\n        setEditionToBuy(i);\r\n        return;\r\n        // console.log(\"edition to buy:\", i);\r\n        // return i;\r\n      }\r\n    }\r\n    // return 1;\r\n  };\r\n  useEffect(() => {\r\n    listArtworks();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchEditionToBuy();\r\n  }, [tokenURI]);\r\n\r\n  return (\r\n    <div className=\"intro\">\r\n      <div className=\"intro-img\">\r\n        {/* <img src={introImg} alt=\"\" /> */}\r\n        <Link\r\n          to={\r\n            editionToBuy\r\n              ? `/music/${latestMint ? latestMint[0] : \"\"}/${editionToBuy}`\r\n              : \"/home\"\r\n          }\r\n        >\r\n          <img\r\n            src={\r\n              tokenURI\r\n                ? `https://prnts.mypinata.cloud/ipfs/${tokenURI.imageHash}`\r\n                : \"\"\r\n            }\r\n            alt=\"\"\r\n          />\r\n        </Link>\r\n      </div>\r\n      <div className=\"intro-content\">\r\n        <h1 style={{ padding: \"10px 0px 20px 0px\" }}>\r\n          {/* Imagine music as NFTS{' '} */}\r\n        </h1>\r\n        {/* <Link to={`/music/${latestMint[0]}/1`}> */}\r\n        <Link to=\"/\">\r\n          <button className=\"btn\">\r\n            <h3>Explore Music</h3>\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import React from \"react\";\r\nimport \"./Card.css\";\r\n// import {Link} from 'react-router-dom'\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Card = ({\r\n  imageUrl,\r\n  title,\r\n  artistName,\r\n  price,\r\n  username,\r\n  editions,\r\n  editionToBuy,\r\n}) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <div className=\"img-container\">\r\n        <img src={imageUrl} alt=\"\" />\r\n      </div>\r\n      <div className=\"card-title\">\r\n        <b>Join {artistName}'s Project</b>\r\n        {/* <div className=\"creator\">\r\n          <i style={{ paddingRight: \"10px\", fontFamily: \"cursive\" }}>Artist:</i>\r\n          <h4 className=\"artist-link\">\r\n            @{`${username.slice(0, 6)}....${username.slice(-7, -1)}`}\r\n          </h4>\r\n        </div> */}\r\n      </div>\r\n      {/* <div className=\"card-body\">\r\n        <div style={{ fontFamily: \"cursive\" }}>\r\n          {editions ? (\r\n            <>\r\n              {editionToBuy ? (\r\n                editionToBuy === 1 ? (\r\n                  <span>1st </span>\r\n                ) : editionToBuy === 2 ? (\r\n                  <span>2nd </span>\r\n                ) : editionToBuy === 3 ? (\r\n                  <span>3rd </span>\r\n                ) : (\r\n                  <span>{editionToBuy}th </span>\r\n                )\r\n              ) : (\r\n                <span>top </span>\r\n              )}\r\n              {\"\"}\r\n              <span>edition of {editions}</span>\r\n            </>\r\n          ) : null}\r\n        </div>\r\n        <b>Worth: {price}</b>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nCard.defaultProps = {\r\n  title: \"#Bad Trip\",\r\n  price: \"1ETH\",\r\n  username: \"anonymus\",\r\n};\r\n\r\nCard.propTypes = {\r\n  title: PropTypes.string,\r\n  price: PropTypes.string.isRequired,\r\n  username: PropTypes.string,\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"../components/Artworks/Card/Card\";\r\n// import web3 from '../ethereum/web3';\r\n// import PrntNFT from '../ethereum/PrntNFT';\r\nimport web3 from \"../ethereum/web3\";\r\nimport PrntNFTData from \"../ethereum/PrntNFTData\";\r\nimport { rejectedCards } from \"../utils/config\";\r\n\r\nconst Artworks = () => {\r\n  const [listItems, setlistItems] = useState(null);\r\n\r\n  const listArtworks = async () => {\r\n    const list = await PrntNFTData.methods.getAllPrnts().call();\r\n    // console.log(list);\r\n    let promises = list.map((items) => {\r\n      // console.log(\"items: \", items);\r\n      return fetch(items.tokenUri)\r\n        .then((res) => {\r\n          // tokenURI = res;\r\n          // console.log(res);\r\n          let tokenURI;\r\n          // = {\r\n          //     name: '',\r\n          //     symbol: '',\r\n          //     description: '',\r\n          //     no_of_editions: '',\r\n          //     imageHash: '',\r\n          //     videoHash: '',\r\n          // };\r\n          // let json;\r\n          return res\r\n            .json()\r\n            .then(async (resp) => {\r\n              tokenURI = resp;\r\n              // console.log(\"tokenUri\", tokenURI);\r\n\r\n              const { prntPrice, status } = await PrntNFTData.methods\r\n                .tokensByAddress(items[0], 1) // display price of 1st edition\r\n                .call();\r\n              // console.log(\r\n              //     'price:',\r\n              //     prntPrice,\r\n              //     '-------- status:',\r\n              //     status\r\n              // );\r\n\r\n              const ownerArray = await PrntNFTData.methods\r\n                .getOwnerOfToken(items[0], 1)\r\n                .call();\r\n              const creator = ownerArray[0];\r\n              // console.log(creator);\r\n\r\n              const editions = tokenURI.attributes[0].value;\r\n              const fetchEditionToBuy = async () => {\r\n                for (let i = 1; i <= editions; i++) {\r\n                  const ownerArray = await PrntNFTData.methods\r\n                    .getOwnerOfToken(items[0], i)\r\n                    .call();\r\n                  if (ownerArray.length === 1) {\r\n                    // console.log(\"edition to buy:\", i);\r\n                    return i;\r\n                  }\r\n                }\r\n                return 1;\r\n              };\r\n              return fetchEditionToBuy().then(async (editionToBuy) => {\r\n                // console.log(\"edition to buy inside:\", editionToBuy);\r\n\r\n                const rejectCards = rejectedCards;\r\n\r\n                for (let i = 0; i < rejectCards.length; i++) {\r\n                  if (items[0] === rejectCards[i]) {\r\n                    return null;\r\n                  }\r\n                }\r\n\r\n                return (\r\n                  <div key={items[0]}>\r\n                    <Link to={`/music/${items[0]}/${editionToBuy}`}>\r\n                      <Card\r\n                        artistName={tokenURI.name}\r\n                        title={`# ${tokenURI.name} - ${tokenURI.symbol}`}\r\n                        username={creator}\r\n                        price={`${web3.utils.fromWei(\r\n                          prntPrice,\r\n                          \"ether\"\r\n                        )} MATIC`}\r\n                        imageUrl={`https://prnts.mypinata.cloud/ipfs/${tokenURI.imageHash}`}\r\n                        editions={tokenURI.attributes[0].value}\r\n                        editionToBuy={editionToBuy}\r\n                      />\r\n                    </Link>\r\n                  </div>\r\n                );\r\n              });\r\n            })\r\n            .catch((err) => console.log(err));\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    });\r\n\r\n    Promise.all(promises).then((listitems) => {\r\n      listitems.reverse();\r\n      setlistItems(listitems);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    listArtworks();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const fetchEditionToBuy = async () => {};\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: \"30px 0px\",\r\n        // margin: \"100px\"\r\n      }}\r\n    >\r\n      <div className=\"grid-style\">{listItems}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Artworks;\r\n","import React from \"react\";\r\nimport Body from \"../components/Home/Body\";\r\nimport Artworks from \"./Artworks\";\r\nimport \"../components/Home/Home.css\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n`;\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <Body />\r\n      {/* <hr\r\n                style={{\r\n                    color: 'black',\r\n                    height: '30',\r\n                    margin: '10px 30px',\r\n                }}\r\n            /> */}\r\n      {/* <Container>\r\n                <span className=\"gradient-underline\">Featured</span>\r\n                <Artworks />\r\n            </Container> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport profile from \"../../assets/images/profile.png\";\r\nimport default_profile from \"../../assets/images/default-profile.jpg\";\r\n\r\nconst Card = ({ imageUrl, description, name, ethAddress }) => {\r\n  const address = ethAddress.slice(0, 7) + \"....\" + ethAddress.slice(-7);\r\n  return (\r\n    <div className=\"artist-card-container\">\r\n      <div className=\"artist-img-border\">\r\n        <div className=\"artist-img-container\">\r\n          <img src={imageUrl} alt=\"\" />\r\n        </div>\r\n      </div>\r\n      {name ? (\r\n        <div className=\"artist-title\">\r\n          <b style={{ fontSize: \"18px\" }}>{name}</b>\r\n        </div>\r\n      ) : (\r\n        // <div className=\"user\">\r\n        <div className=\"artist-title\">\r\n          <h4 className=\"user-name\"> @{address}</h4>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"desc\">\r\n        {description}\r\n        {/* Music Artist. Rapper. */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst profile_image = [profile, default_profile];\r\n\r\nCard.defaultProps = {\r\n  ethAddress: \"\",\r\n  // imageUrl: profile_image[Math.round(Math.random())]\r\n  imageUrl: profile_image[0],\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../components/Artists/Artists.css\";\r\nimport Card from \"../components/Artists/Card\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PrntNFTData from \"../ethereum/PrntNFTData\";\r\nimport profile from \"../assets/images/profile.png\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst Artists = () => {\r\n  const [listArtists, setlistArtists] = useState([]);\r\n\r\n  const getAllArtists = async () => {\r\n    try {\r\n      const artists = await PrntNFTData.methods.getAllArtists().call();\r\n      console.log(\"artists: \", artists);\r\n      const promises = artists.map((address) => {\r\n        const url = `https://prnts-nfts.herokuapp.com/api/users/${address}`;\r\n        const userData = async () => {\r\n          try {\r\n            const { data } = await axios.get(url);\r\n            return data;\r\n          } catch (err) {\r\n            // if (err) console.error(err);\r\n          }\r\n        };\r\n        return userData().then((data) => {\r\n          return (\r\n            <div key={address}>\r\n              <Link to={`/profile/${address}`}>\r\n                <Card\r\n                  ethAddress={address}\r\n                  name={data ? data.name : \"\"}\r\n                  imageUrl={\r\n                    data\r\n                      ? data.pfpHash\r\n                        ? `https://prnts.mypinata.cloud/ipfs/${data.pfpHash}`\r\n                        : profile\r\n                      : profile\r\n                  }\r\n                />\r\n              </Link>\r\n            </div>\r\n          );\r\n        });\r\n\r\n        // const url = `https://prnts-nfts.herokuapp.com/api/users/${address}`;\r\n        // return axios.get(url).then((res) => {\r\n        //   if (res.status == 404) return null;\r\n        //   console.log(\"res: \", res);\r\n        //   let data;\r\n        //   if (res.data) data = res.data;\r\n        //   return (\r\n        //     <div key={address}>\r\n        //       <Link to={`/profile/${address}`}>\r\n        //         <Card\r\n        //           ethAddress={address}\r\n        //           name={data ? data.name : \"\"}\r\n        //           imageUrl={\r\n        //             data\r\n        //               ? data.pfpHash\r\n        //                 ? `https://prnts.mypinata.cloud/ipfs/${data.pfpHash}`\r\n        //                 : profile\r\n        //               : profile\r\n        //           }\r\n        //         />\r\n        //       </Link>\r\n        //     </div>\r\n        //   );\r\n        // });\r\n      });\r\n\r\n      Promise.all(promises).then((listArtists) => {\r\n        //   listArtists.reverse();\r\n        setlistArtists(listArtists);\r\n      });\r\n    } catch (err) {\r\n      if (err) console.error(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllArtists();\r\n    return () => {\r\n      // cleanup\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"grid-container\">\r\n      {/* <h2>Artists</h2> */}\r\n      {listArtists}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Artists;\r\n","import React, { useState } from \"react\";\r\nimport profile from \"../../assets/images/default-profile.jpg\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nconst Profile = ({ name, username, ethAddress, Id, pfpHash }) => {\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const address = ethAddress.slice(0, 6) + \".....\" + ethAddress.slice(-7);\r\n\r\n  const onCopyAddress = () => {\r\n    setCopied(true);\r\n    setTimeout(() => {\r\n      setCopied(false);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"profile-desc\">\r\n        <div className=\"pic-1\">\r\n          <img\r\n            src={\r\n              pfpHash ? `https://prnts.mypinata.cloud/ipfs/${pfpHash}` : profile\r\n            }\r\n            alt=\"Profile Pic\"\r\n          />\r\n        </div>\r\n        <div className=\"details-1\">\r\n          {name && (\r\n            <div>\r\n              <h1>{name}</h1>\r\n            </div>\r\n          )}\r\n          {username && (\r\n            <div>\r\n              <h3>@{username}</h3>\r\n            </div>\r\n          )}\r\n          <div className=\"eth-address\">\r\n            <div className=\"artist-id\">#{Id}</div>\r\n            <div className=\"address\">{address}</div>\r\n            <CopyToClipboard text={ethAddress} onCopy={() => onCopyAddress()}>\r\n              <div className=\"copy-symbol\">\r\n                {copied ? <span>Copied!</span> : <span>Copy</span>}\r\n              </div>\r\n            </CopyToClipboard>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.defaultProps = {\r\n  // name: \"Jack Butcher\",\r\n  // username: \"anonymus\",\r\n  // ethAddress: \"0x09a9601349928e391fB12BAb0270999d189072EE\",\r\n  Id: \" ID\",\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { FaWallet, FaSignOutAlt } from \"react-icons/fa\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Home from \"./views/Home\";\r\nimport Artworks from \"./views/Artworks\";\r\nimport Artists from \"./views/Artists\";\r\nimport ProfilePage from \"./views/ProfilePage\";\r\nimport Art from \"./views/Art\";\r\nimport Create from \"./views/Create\";\r\nimport EditProfile from \"./views/EditProfile\";\r\nimport RequestForApproval from \"./views/RequestForApproval\";\r\nimport ProtectedRoute from \"./utils/ProtectedRoute\";\r\n\r\nimport MaticToken from \"./assets/images/matic-token-icon.webp\";\r\n\r\nimport \"./App.css\";\r\nimport styled from \"styled-components\";\r\nimport Footer from \"./components/Footer/Footer\";\r\n\r\nimport Web3Modal from \"web3modal\";\r\nimport web3 from \"./ethereum/web3\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport { WalletLink } from \"walletlink\";\r\nimport { CircularProgress,Box } from '@mui/material'\r\n\r\nimport coinbaseLogo from \"./assets/images/coinbase-wallet-logo.svg\";\r\nimport NotApproved from \"./components/Create/NotApproved/NotApproved\";\r\nimport { useAsync } from \"react-use\";\r\nimport LensHub from \"./ethereum/LensHub\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nlet provider;\r\nconst infuraId = process.env.REACT_APP_INFURA_ID;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  min-height: 100vh;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nconst AlertMsg = styled.div`\r\n  position: fixed;\r\n  top: 25vh;\r\n  right: 0;\r\n  background-color: red;\r\n  padding: 20px 30px;\r\n  color: white;\r\n  border-top-left-radius: 10px;\r\n  border-bottom-left-radius: 10px;\r\n\r\n  @media only screen and (max-width: 600px) {\r\n    zoom: 80%;\r\n  }\r\n`;\r\n\r\n// console.log(\"INFURA_ID\", infuraId);\r\n\r\nconst providerOptions = {\r\n  walletconnect: {\r\n    package: WalletConnectProvider, // required\r\n    options: {\r\n      // infuraId: infuraId, // required\r\n      rpc: {\r\n        1: `https://mainnet.infura.io/v3/${infuraId}`,\r\n        4: `https://rinkeby.infura.io/v3/${infuraId}`,\r\n        137: `https://polygon-mainnet.g.alchemy.com/v2/${process.env.REACT_APP_ALCHEMY_KEY}`,\r\n        80001: `https://polygon-mumbai.g.alchemy.com/v2/${process.env.REACT_APP_ALCHEMY_KEY}`,\r\n      },\r\n    },\r\n  },\r\n  \"custom-walletlink\": {\r\n    package: WalletLink,\r\n    display: {\r\n      logo: coinbaseLogo,\r\n      name: \"Coinbase Wallet\",\r\n      description: \"Scan with WalletLink to connect\",\r\n    },\r\n    options: {\r\n      appName: \"Prnts\",\r\n      // networkUrl: `https://mainnet.infura.io/v3/${infuraId}`,\r\n      // networkUrl: `https://polygon-mumbai.g.alchemy.com/v2/${process.env.REACT_APP_ALCHEMY_KEY}`,\r\n      // networkUrl: `https://polygon-mumbai.g.alchemy.com/v2/${process.env.REACT_APP_ALCHEMY_KEY}`,\r\n      networkUrl: `https://polygon-mumbai.g.alchemy.com/v2/${process.env.REACT_APP_ALCHEMY_KEY}`,\r\n      chainId: 80001,\r\n    },\r\n    connector: async (_, options) => {\r\n      const { appName, networkUrl, chainId } = options;\r\n      const walletLink = new WalletLink({\r\n        appName,\r\n      });\r\n      const provider = walletLink.makeWeb3Provider(networkUrl, chainId);\r\n      await provider.enable();\r\n      return provider;\r\n    },\r\n  },\r\n};\r\n\r\nconst web3Modal = new Web3Modal({\r\n  // network: \"matic\", // optional\r\n  cacheProvider: true, // optional\r\n  providerOptions, // required\r\n});\r\n\r\nconst networks = {\r\n  polygon: {\r\n    chainId: `0x${Number(137).toString(16)}`,\r\n    chainName: \"Polygon Mainnet\",\r\n    nativeCurrency: {\r\n      name: \"MATIC\",\r\n      symbol: \"MATIC\",\r\n      decimals: 18,\r\n    },\r\n    rpcUrls: [\"https://polygon-rpc.com/\"],\r\n    blockExplorerUrls: [\"https://polygonscan.com/\"],\r\n  },\r\n  polygon_mumbai: {\r\n    chainId: `0x${Number(80001).toString(16)}`,\r\n    chainName: \"Polygon Mumbai\",\r\n    nativeCurrency: {\r\n      name: \"MATIC\",\r\n      symbol: \"MATIC\",\r\n      decimals: 18,\r\n    },\r\n    rpcUrls: [\"https://rpc-mumbai.maticvigil.com/\"],\r\n    blockExplorerUrls: [\"https://mumbai.polygonscan.com/\"],\r\n  },\r\n};\r\n\r\nconst changeNetwork = async ({ networkName, setError }) => {\r\n  try {\r\n    if (!window.ethereum) throw new Error(\"No crypto wallet found\");\r\n    await window.ethereum.request({\r\n      method: \"wallet_addEthereumChain\",\r\n      params: [\r\n        {\r\n          ...networks[networkName],\r\n        },\r\n      ],\r\n    });\r\n\r\n    console.log(\"provider: \", provider);\r\n  } catch (err) {\r\n    setError(err.message);\r\n  }\r\n};\r\n\r\nconst App = () => {\r\n  const [account, setaccount] = useState(\"\");\r\n  const [windowDimension, setWindowDimension] = useState(null);\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  const [error, setError] = useState();\r\n  const [chainIdConnected, setChainId] = useState();\r\n\r\n  const handleNetworkSwitch = async (networkName) => {\r\n    setError();\r\n    await changeNetwork({ networkName, setError });\r\n    fetchChainId();\r\n    // window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleNetworkSwitch(\"polygon_mumbai\");\r\n  }, []);\r\n\r\n  const IsMobile = windowDimension <= 700;\r\n\r\n  // useEffect(() => {\r\n  //   onConnectWallet();\r\n  // }, [])\r\n\r\n  useEffect(() => {\r\n    onConnectWallet();\r\n    const getAccount = async () => {\r\n      // console.log(web3);\r\n      const accounts = await web3.eth.getAccounts();\r\n      console.log(\"account in header: \", accounts[0]);\r\n      // setaccount(accounts[0]);\r\n    };\r\n    getAccount();\r\n    setWindowDimension(window.innerWidth);\r\n    setIsMobile(IsMobile);\r\n  }, [account]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimension(window.innerWidth);\r\n    }\r\n    setIsMobile(IsMobile);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, [IsMobile]);\r\n\r\n  const fetchAccount = async () => {\r\n    // Time to reload your interface with accounts[0]!\r\n    const account = await web3.eth.getAccounts();\r\n    setaccount(account[0]);\r\n    // accounts = await web3.eth.getAccounts();\r\n    console.log(account);\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function listenMMAccount() {\r\n      try {\r\n        window.ethereum.on(\"accountsChanged\", fetchAccount);\r\n      } catch (err) {\r\n        console.log(\"Browser wallet not installed!\");\r\n      }\r\n    }\r\n    listenMMAccount();\r\n    return () => {\r\n      window.ethereum.removeListener(\"accountsChanged\", fetchAccount);\r\n    };\r\n  }, []);\r\n\r\n  const onConnectWallet = async () => {\r\n    console.log(\"connecting wallet...\");\r\n    console.log(\"cached provider\", web3Modal.cachedProvider);\r\n    try {\r\n      provider = await web3Modal.connect();\r\n      // web3Modal.connect().then(async (provider) => {\r\n      //   await provider.send({\r\n      //     method: \"wallet_switchEthereumChain\",\r\n      //     params: {\r\n      //       chainId: \"0x89\",\r\n      //     },\r\n      //   });\r\n      // });\r\n    } catch (err) {\r\n      console.log(\"Could not get a wallet connection\", err);\r\n      return;\r\n    }\r\n    web3.setProvider(provider);\r\n\r\n    const id = await web3.eth.getChainId();\r\n    setChainId(id);\r\n\r\n    console.log(\"chain id: \", id);\r\n    if (id !== 80001) {\r\n      console.log(\"if not 137 trying to switch network, provider: \", provider);\r\n      const payload = {\r\n        method: \"wallet_switchEthereumChain\",\r\n        params: [\r\n          {\r\n            chainId: \"0x89\",\r\n          },\r\n        ],\r\n        // method: \"eth_sign\",\r\n        // params: [\r\n        //   \"0x5c0085E600398247a37de389931CCea8EdD3ba67\",\r\n        //   \"Connecting to the Prnts NFT platform!\",\r\n        // ],\r\n      };\r\n      // provider.request(payload).then(async (res) => {\r\n      //   console.log(\"res: \", res);\r\n      //   const accounts = await web3.eth.getAccounts();\r\n      //   setaccount(accounts[0]);\r\n      // });\r\n      const res = await provider.send(payload, (err) => {\r\n        if (err) console.log(\"err on switch to polygon: \", err);\r\n      });\r\n\r\n      console.log(\"res\", res);\r\n    }\r\n    const accounts = await web3.eth.getAccounts();\r\n    setaccount(accounts[0]);\r\n\r\n    // setweb(web3);\r\n\r\n    // console.log(\"provider: \", provider);\r\n\r\n    // const res = await provider.send({\r\n    //   method: \"wallet_switchEthereumChain\",\r\n    //   params: {\r\n    //     chainId: \"0x89\",\r\n    //   },\r\n    // });\r\n\r\n    // console.log(\"res\", res);\r\n\r\n    // web3.setProvider(provider);\r\n    // console.log(\"accounts[0]\", accounts[0]);\r\n    // console.log(\"after setProvider\", web3);\r\n    // console.log(\"cached provider on connect: \", web3Modal.cachedProvider)\r\n    // console.log(\"web3 on mount\", web3);\r\n    // console.log(\"provider\",web3.currentProvider);\r\n    // window.location.reload();\r\n  };\r\n  const { value: checkHasProfile = 0, loading } = useAsync(async () => await LensHub.methods.balanceOf(account).call(), [account])\r\n\r\n  const onDisconnect = async (e) => {\r\n    e.preventDefault();\r\n    // let provider = web3.currentProvider;\r\n    // if(typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\r\n    //   if(!(account === \"\" || typeof account === \"undefined\")) {\r\n    //     // setaccount(\"\");\r\n    //     const permissions = await window.ethereum.request({\r\n    //       method: \"wallet_requestPermissions\",\r\n    //       params: [\r\n    //         {\r\n    //           eth_accounts: {}\r\n    //         }\r\n    //       ]\r\n    //     });\r\n    //     console.log(\"wallet_requestPermissions\", permissions)\r\n    //   }\r\n    // }\r\n\r\n    console.log(\r\n      \"cached provider before provider.close(): \",\r\n      web3Modal.cachedProvider\r\n    );\r\n    console.log(\"Killing the session\", web3.currentProvider);\r\n    console.log(\"web3.givenProvider\", web3.givenProvider);\r\n\r\n    if (web3 && web3.currentProvider && web3.currentProvider.close) {\r\n      await web3.currentProvider.close();\r\n    }\r\n\r\n    console.log(\r\n      \"cached provider after provider.close(): \",\r\n      web3Modal.cachedProvider\r\n    );\r\n    web3Modal.clearCachedProvider();\r\n    console.log(\"cached provider after clear: \", web3Modal.cachedProvider);\r\n    provider = null;\r\n    // setaccount(\"\");\r\n    window.location.reload();\r\n  };\r\n\r\n  const [isApproved, setIsApproved] = useState(true);\r\n\r\n  // const getIsApproved = async () => {\r\n  //   const url = `https://prnts-nfts.herokuapp.com/api/approvalRequests/${account}/isApproved`;\r\n  //   try {\r\n  //     const res = await axios.get(url);\r\n  //     setIsApproved(res.data);\r\n  //     // console.log(res.data);\r\n  //   } catch (err) {\r\n  //     if (err) console.log(err);\r\n  //   }\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   getIsApproved();\r\n  // });\r\n\r\n  const fetchChainId = async () => {\r\n    if (account) {\r\n      const id = await web3.eth.getChainId();\r\n      setChainId(id);\r\n      console.log(\"chain id: \", id);\r\n      if (id !== 80001) {\r\n        console.log(\"if not 137 , provider: \", provider);\r\n        const res = await provider.send(\r\n          {\r\n            method: \"wallet_switchEthereumChain\",\r\n            params: {\r\n              chainId: \"0x89\",\r\n            },\r\n          },\r\n          (err) => {\r\n            if (err) console.log(\"err on switch to polygon: \", err);\r\n          }\r\n        );\r\n\r\n        console.log(\"res\", res);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchChainId();\r\n  }, []);\r\n\r\n  const networkChanged = (chainId) => {\r\n    console.log({ chainId });\r\n    setChainId(chainId);\r\n  };\r\n\r\n  useEffect(() => {\r\n    try {\r\n      window.ethereum.on(\"chainChanged\", networkChanged);\r\n      provider.on(\"chainChanged\", networkChanged);\r\n    } catch (err) {\r\n      if (err) console.log(err);\r\n    }\r\n    return () => {\r\n      window.ethereum.removeListener(\"chainChanged\", networkChanged);\r\n    };\r\n  }, []);\r\n\r\n  if(loading){\r\n    return (\r\n      <Box justifyContent=\"center\" alignItems=\"center\" display=\"flex\" height=\"100vh\">\r\n        <CircularProgress size={60} />\r\n      </Box>\r\n    )\r\n  }\r\n  return (\r\n    <BrowserRouter history={createBrowserHistory}>\r\n      <Container>\r\n        <div\r\n          style={{\r\n            backgroundColor: \"#e9eff0\",\r\n            boxShadow: \"3px 1.5px 12px #e0e5e6, -5px -5px 12px #f2f9fa\",\r\n            borderBottomLeftRadius: \"40px\",\r\n            borderBottomRightRadius: \"40px\",\r\n            // borderRadius: \"50px\",\r\n            position: \"sticky\",\r\n            top: \"0\",\r\n            zIndex: \"2\",\r\n            // overflow: 'hidden',\r\n            // marginBottom: '10px'\r\n          }}\r\n        >\r\n          {/* <div>chainChanged: {chainIdConnected}</div> */}\r\n          {/* {account && chainIdConnected !== 137 ? (\r\n            <AlertMsg>\r\n              <span>Wrong network :( </span>\r\n              <br />\r\n              <span>Please switch to Polygon mainnet & reload!</span>\r\n              <br />\r\n              <br />\r\n              <span>To add Polygon to your metamask, please visit </span>\r\n              <br />\r\n              <a href=\"https://chainlist.org\" target=\"_blank\">\r\n                https://chainlist.org\r\n              </a>\r\n              <span> and search for Polygon Mainnet.</span>\r\n            </AlertMsg>\r\n          ) : null} */}\r\n          {/* {chainIdConnected === 137 ? <AlertMsg>Connected</AlertMsg> : null} */}\r\n\r\n          <Header account={account} isMobile={isMobile} checkHasProfile={checkHasProfile}/>\r\n          <div\r\n            style={{\r\n              // marginLeft: \"0px\",\r\n              // right: \"15px\",\r\n              // top: \"15px\",\r\n              position: \"absolute\",\r\n              zIndex: \"1\",\r\n              padding: \"15px 15px\",\r\n              // marginLeft: \"0px\"\r\n              right: \"2vw\",\r\n              top: \"1.45vh\",\r\n              // left: \"100px\"\r\n            }}\r\n          >\r\n            {account === \"\" || typeof account === \"undefined\" ? (\r\n              isMobile ? (\r\n                <>\r\n                  <div>\r\n                    <a\r\n                      className=\"btn\"\r\n                      href=\"https://www.moonpay.com/buy/matic\"\r\n                      target=\"_blank\"\r\n                      style={{\r\n                        // maxWidth: \"100px\",\r\n                        // width: \"100px\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        borderRadius: \"20px\",\r\n                        textAlign: \"center\",\r\n                        position: \"absolute\",\r\n                        zIndex: \"1\",\r\n                        // right: \"8vw\",\r\n                        // top: \"1.45vh\",\r\n                        top: \"1vh\",\r\n                        // left: \"18vw\",\r\n                        left: \"2vw\",\r\n                        position: \"fixed\",\r\n                        fontWeight: \"bold\",\r\n                        fontSize: \"13px\",\r\n                        zoom: \"90%\",\r\n                      }}\r\n                    >\r\n                      {/* <img\r\n                        style={{ width: \"20px\", height: \"20px\" }}\r\n                        src={MaticToken}\r\n                      /> */}\r\n                      Buy Matic\r\n                    </a>\r\n                  </div>\r\n                  <div\r\n                    className=\"btn\"\r\n                    style={{\r\n                      top: \"1vh\",\r\n                      right: \"2vw\",\r\n                      position: \"fixed\",\r\n                      // blockSize: 'smaller'\r\n                      zoom: \"90%\",\r\n                    }}\r\n                  >\r\n                    <FaWallet onClick={() => onConnectWallet()} />\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div style={{ display: \"grid\", gap: \"10px\" }}>\r\n                  <a\r\n                    className=\"btn\"\r\n                    href=\"https://www.moonpay.com/buy/matic\"\r\n                    target=\"_blank\"\r\n                    style={{\r\n                      maxWidth: \"150px\",\r\n                      display: \"flex\",\r\n                      width: \"115px\",\r\n                      justifyContent: \"center\",\r\n                      textAlign: \"center\",\r\n                      position: \"absolute\",\r\n                      zIndex: \"1\",\r\n                      right: \"8vw\",\r\n                      top: \"1.45vh\",\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    Buy Matic\r\n                  </a>\r\n                  <button\r\n                    className=\"btn\"\r\n                    style={{\r\n                      // marginLeft: \"0px\",\r\n                      // right: \"15px\",\r\n                      // top: \"15px\",\r\n                      position: \"absolute\",\r\n                      zIndex: \"1\",\r\n                      // padding: '15px 15px',\r\n                      // marginLeft: \"0px\"\r\n                      right: \"2vw\",\r\n                      top: \"1.45vh\",\r\n                      // left: \"100px\"\r\n                    }}\r\n                    onClick={() => onConnectWallet()}\r\n                  >\r\n                    <h4>\r\n                      <span>Wallet</span>\r\n                    </h4>\r\n                  </button>\r\n                </div>\r\n              )\r\n            ) : (\r\n              <>\r\n                <h4\r\n                  style={{\r\n                    top: \"1vh\",\r\n                    // left: `${isMobile ? \"4vw\" : \"2vw\"}`,\r\n                    left: `${isMobile ? \"40px\" : \"40px\"}`,\r\n                    position: \"fixed\",\r\n                    margin: \"5px 0px\",\r\n                    zoom: `${isMobile ? \"85%\" : \"100%\"}`,\r\n                  }}\r\n                  className=\"btn\"\r\n                  onClick={onDisconnect}\r\n                >\r\n                  <FaSignOutAlt size={13} />\r\n                </h4>\r\n                <div>\r\n                  <a\r\n                    className=\"btn\"\r\n                    href=\"https://www.moonpay.com/buy/matic\"\r\n                    target=\"_blank\"\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      zIndex: \"1\",\r\n                      top: \"1vh\",\r\n                      left: `${isMobile ? \"null\" : \"120px\"}`,\r\n                      right: `${isMobile ? \"40px\" : \"null\"}`,\r\n                      position: \"fixed\",\r\n                      margin: \"5px 0px\",\r\n                      zoom: `${isMobile ? \"85%\" : \"100%\"}`,\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    {/* <img\r\n                      style={{ width: \"20px\", height: \"20px\" }}\r\n                      src={MaticToken}\r\n                    /> */}\r\n                    Buy Matic\r\n                  </a>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n          {/* <div\r\n            style={{\r\n              margin: '80px 10px',\r\n            }}\r\n          /> */}\r\n        </div>\r\n\r\n        <br />\r\n        {/* <button className=\"btn\" onClick={() => console.log(account)}>Account</button> */}\r\n        <Switch>\r\n          <Route path=\"/home\" exact component={() => <Home />} />\r\n          <Route path=\"/\" exact component={() => <Artworks />} />\r\n          <Route path=\"/community\" exact component={() => <Artists />} />\r\n          <Route\r\n            path=\"/music/:id/:tokenId\"\r\n            exact\r\n            component={() => <Art account={account} isMobile={isMobile} />}\r\n          />\r\n          <Route\r\n            path=\"/profile/:id\"\r\n            exact\r\n            component={() => (\r\n              <ProfilePage account={account} isMobile={isMobile} />\r\n            )}\r\n          />\r\n          <ProtectedRoute\r\n            path=\"/create\"\r\n            exact\r\n            isAuth={isApproved}\r\n            component={() => <Create account={account} isMobile={isMobile} />}\r\n            extraComponent={() => <NotApproved account={account} />}\r\n            account={account}\r\n          />\r\n          <Route\r\n            path=\"/profile/:id/edit-profile\"\r\n            exact\r\n            // isAuth={true}\r\n            component={() => <EditProfile account={account} />}\r\n            // extraComponent={() => null}\r\n            account={account}\r\n          />\r\n          {/* <ProtectedRoute\r\n            path=\"/profile/:id/edit-profile\"\r\n            exact\r\n            isAuth={true}\r\n            component={() => <EditProfile account={account} />}\r\n            extraComponent={() => null}\r\n            account={account}\r\n          /> */}\r\n          <ProtectedRoute\r\n            path=\"/profile/:id/request-for-approval\"\r\n            exact\r\n            isAuth={isApproved}\r\n            component={(props) => (\r\n              <Redirect\r\n                to={{\r\n                  pathname: \"/create\",\r\n                  state: { from: props.location },\r\n                }}\r\n              />\r\n            )}\r\n            extraComponent={() => <RequestForApproval account={account} />}\r\n            account={account}\r\n          />\r\n        </Switch>\r\n        <Footer />\r\n      </Container>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nconst About = ({ about }) => {\r\n    return (\r\n        <div className=\"about\">\r\n            {/* About Designer and documentarist filmmaker. With several\r\n            award-winning companies and projects at festivals like London\r\n            Festival, FITC & others. ᏌPAE is his music project with two music's\r\n            launched. */}\r\n            {about}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;\r\n","import web3 from \"./web3\";\r\nimport PrntNFTFactory from \"./build/PrntNFTFactory.json\";\r\n\r\nconst instance = new web3.eth.Contract(\r\n  PrntNFTFactory.abi,\r\n  // '0x2623f548483559D26ECE2677BfD4a0CC26C67330'\r\n  // '0x6cB1ee5BE066d72c76a3b96428F0578002A0F571'\r\n  // '0x1d095Ce09b8Df62570D7Db99DCddF523EdA6521c'\r\n  // '0x48039c0c6E330B585077b21F3fB5824A02423a5b'\r\n  // '0x5f0a21380D7D55D35619A0aF4D8B4f9F303B2A3f'\r\n  // '0x0b2D677D91fe9304bB7e94e2f3b07faC4592dB83'\r\n\r\n  //rinkeby\r\n  // \"0x208392eC796237E3BFb6F4B1e86999F596371a5A\"\r\n  // \"0xdD7bC45E25a86E1DbC1AE1477330461cF7fB2875\"\r\n  // \"0x6B77712429DEebB0B2551668cD9314B5d52ECdD2\"\r\n\r\n  // mumbai\r\n  // \"0x5f0a21380D7D55D35619A0aF4D8B4f9F303B2A3f\"\r\n\r\n  // Mainnet v1.0\r\n  \"0xd99F08EA1a899dE0A1d56B90CC2672B0f2dB3F24\"\r\n);\r\n\r\nexport default instance;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport web3 from \"../../ethereum/web3\";\r\nimport Artwork from \"../Artworks/Card/Card\";\r\nimport PrntNFTFactory from \"../../ethereum/PrntNFTFactory\";\r\nimport PrntNFTData from \"../../ethereum/PrntNFTData\";\r\nimport { rejectedCards } from \"../../utils/config\";\r\n// import PrntNFTData from '../../ethereum/PrntNFTData';\r\n\r\nconst Creations = () => {\r\n  const { id } = useParams();\r\n\r\n  const [listCreations, setlistCreations] = useState([]);\r\n\r\n  const refresh = async () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  const getCreations = async () => {\r\n    const creations = await PrntNFTFactory.methods.getCreations(id).call();\r\n    // console.log(creations);\r\n    let promises = creations.map((prnt) => {\r\n      // await getPrnt(address);\r\n      // console.log(prnt);\r\n      return fetch(prnt.tokenUri)\r\n        .then((res) => {\r\n          let tokenURI;\r\n          return res\r\n            .json()\r\n            .then(async (res) => {\r\n              tokenURI = res;\r\n\r\n              const { prntPrice, status } = await PrntNFTData.methods\r\n                .tokensByAddress(prnt.prntNFT, 1) // display price of 1st edition\r\n                .call();\r\n\r\n              const ownerArray = await PrntNFTData.methods\r\n                .getOwnerOfToken(prnt.prntNFT, 1)\r\n                .call();\r\n              const creator = ownerArray[0];\r\n              // console.log(creator);\r\n\r\n              const editions = tokenURI.attributes[0].value;\r\n              const fetchEditionToBuy = async () => {\r\n                for (let i = 1; i <= editions; i++) {\r\n                  const ownerArray = await PrntNFTData.methods\r\n                    .getOwnerOfToken(prnt.prntNFT, i)\r\n                    .call();\r\n                  if (ownerArray.length === 1) {\r\n                    // console.log(\"edition to buy:\", i);\r\n                    return i;\r\n                  }\r\n                }\r\n                return 1;\r\n              };\r\n\r\n              return fetchEditionToBuy().then(async (editionToBuy) => {\r\n                const rejectCards = rejectedCards;\r\n\r\n                for (let i = 0; i < rejectCards.length; i++) {\r\n                  if (prnt[0] === rejectCards[i]) {\r\n                    return null;\r\n                  }\r\n                }\r\n                return (\r\n                  <div key={prnt[0]} onClick={refresh}>\r\n                    <Link to={`/music/${prnt[0]}/${editionToBuy}`}>\r\n                      <Artwork\r\n                        artistName={tokenURI.name}\r\n                        title={`# ${tokenURI.name} - ${tokenURI.symbol}`}\r\n                        username={`${creator.slice(0, 6)}....${creator.slice(\r\n                          -7,\r\n                          -1\r\n                        )}`}\r\n                        price={`${web3.utils.fromWei(\r\n                          prntPrice,\r\n                          \"ether\"\r\n                        )} MATIC`}\r\n                        imageUrl={`https://prnts.mypinata.cloud/ipfs/${tokenURI.imageHash}`}\r\n                        editions={tokenURI.attributes[0].value}\r\n                        editionToBuy={editionToBuy}\r\n                      />\r\n                    </Link>\r\n                  </div>\r\n                );\r\n              });\r\n            })\r\n            .catch((err) => console.log(err));\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    });\r\n\r\n    Promise.all(promises).then((listCreations) => {\r\n      listCreations.reverse();\r\n      setlistCreations(listCreations);\r\n    });\r\n    // console.log(listCreations);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCreations();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"grid-style\">\r\n      {/* <Artwork title=\"# Pop Music\" username=\"visualzz\" price=\"0.8ETH\" /> */}\r\n      {listCreations}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Creations;\r\n","import web3 from \"./web3\";\r\nimport PrntNFTMarketplace from \"./build/PrntNFTMarketplace.json\";\r\n\r\nconst instance = new web3.eth.Contract(\r\n  PrntNFTMarketplace.abi,\r\n  // '0xed72eDC437dA2fe36Aa9a7174F5E8C0cc3878cab' //single\r\n  // '0xde15CB514205Ac587c07f37bcE64CDcBee74F163' //kovan //multiple\r\n  // '0x0D9aAA2166fCff0c4b7BE29F05BF5011c6E0C165' //rinkeby\r\n  // '0xc948e3470b72b92f5C93Bf600B59682a32Db7370'\r\n  // '0xBE290E5D5E1d9d9d145F5ED65a67e1C807179EC2'\r\n  //   \"0xA55a8F2016dc3b8959435637095C0F85a6640A5D\"\r\n\r\n  // Rinkeby\r\n  // \"0xF8b4B4F7629f4e101dF8C93f7D17205Fed476f43\"\r\n  // \"0xf0B46Cd04637276AeC13785164Ae44bd281B5329\"\r\n  // \"0x18b12a450C3da54127CBD6D503A8f3F9Af7D6F47\"\r\n\r\n  // mumbai\r\n  // \"0xBE290E5D5E1d9d9d145F5ED65a67e1C807179EC2\"\r\n\r\n  // Mainnet v1.0\r\n  \"0x15c0b561d1af54c8DBAf4aa369dFC448f2d3F375\"\r\n);\r\n\r\nexport default instance;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport web3 from \"../../ethereum/web3\";\r\nimport Artwork from \"../Artworks/Card/Card\";\r\nimport PrntNFTMarketplace from \"../../ethereum/PrntNFTMarketplace\";\r\nimport PrntNFTData from \"../../ethereum/PrntNFTData\";\r\nimport { rejectedCards } from \"../../utils/config\";\r\n\r\nconst Collections = () => {\r\n  const { id } = useParams();\r\n\r\n  const [listCollections, setlistCollections] = useState([]);\r\n\r\n  const refresh = async () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  const getCollections = async () => {\r\n    const collections = await PrntNFTMarketplace.methods\r\n      .getCollections(id)\r\n      .call();\r\n    // const _prnt = await PrntNFTData.methods.getPrntByNFTAddress()\r\n    // console.log(collections);\r\n    const promises = collections.map((prnt) => {\r\n      // const len = prnt[3].length;\r\n      return fetch(prnt.tokenUri)\r\n        .then((res) => {\r\n          return res\r\n            .json()\r\n            .then(async (res) => {\r\n              let tokenURI = res;\r\n              // console.log(tokenURI);\r\n\r\n              const ownerArray = await PrntNFTData.methods\r\n                .getOwnerOfToken(prnt[0], 1)\r\n                .call();\r\n              const creator = ownerArray[0];\r\n              const { prntPrice, status } = await PrntNFTData.methods\r\n                .tokensByAddress(prnt[0], 1)\r\n                .call();\r\n              const len = ownerArray.length;\r\n\r\n              const editions = tokenURI.attributes[0].value;\r\n              const fetchEditionToBuy = async () => {\r\n                for (let i = 1; i <= editions; i++) {\r\n                  const ownerArray = await PrntNFTData.methods\r\n                    .getOwnerOfToken(prnt.prntNFT, i)\r\n                    .call();\r\n                  if (ownerArray.length === 1) {\r\n                    // console.log(\"edition to buy:\", i);\r\n                    return i;\r\n                  }\r\n                }\r\n                return 1;\r\n              };\r\n\r\n              return fetchEditionToBuy().then(async (editionToBuy) => {\r\n                const rejectCards = rejectedCards;\r\n\r\n                for (let i = 0; i < rejectCards.length; i++) {\r\n                  if (prnt[0] === rejectCards[i]) {\r\n                    return null;\r\n                  }\r\n                }\r\n\r\n                return (\r\n                  <div key={prnt[0]} onClick={refresh}>\r\n                    {ownerArray[len - 1] !== id ? ( //here it will be always true sadly :(\r\n                      <p\r\n                        style={{\r\n                          color: \"red\",\r\n                          margin: \"10px 0px\",\r\n                        }}\r\n                      >\r\n                        **Previously Owned\r\n                      </p>\r\n                    ) : null}\r\n                    <Link to={`/music/${prnt[0]}/${editionToBuy}`}>\r\n                      <Artwork\r\n                        artistName={tokenURI.name}\r\n                        title={`# ${tokenURI.name} - ${tokenURI.symbol}`}\r\n                        username={`${creator.slice(0, 6)}....${creator.slice(\r\n                          -7,\r\n                          -1\r\n                        )}`}\r\n                        price={`${web3.utils.fromWei(\r\n                          prntPrice,\r\n                          \"ether\"\r\n                        )} MATIC`}\r\n                        imageUrl={`https://prnts.mypinata.cloud/ipfs/${tokenURI.imageHash}`}\r\n                        editions={tokenURI.attributes[0].value}\r\n                        editionToBuy={editionToBuy}\r\n                      />\r\n                    </Link>\r\n                  </div>\r\n                );\r\n              });\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n      // console.log(prnt[3]);\r\n    });\r\n\r\n    Promise.all(promises).then((listCollections) => {\r\n      listCollections.reverse();\r\n      setlistCollections(listCollections);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCollections();\r\n  }, []);\r\n\r\n  return <div className=\"grid-style\">{listCollections}</div>;\r\n};\r\n\r\nexport default Collections;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Nav = ({ id, isMobile }) => {\r\n  return (\r\n    <div className=\"nav\">\r\n      <div className=\"nav-lnk\">\r\n        <NavLink exact to={`/profile/${id}`} activeClassName=\"selected\">\r\n          {isMobile ? (\r\n            <h4 className=\"link-cc\">Creations</h4>\r\n          ) : (\r\n            <h3 className=\"link-cc\">Creations</h3>\r\n          )}\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"nav-lnk\">\r\n        <NavLink\r\n          exact\r\n          to={`/profile/${id}/collections`}\r\n          activeClassName=\"selected\"\r\n        >\r\n          {isMobile ? (\r\n            <h4 className=\"link-cc\">Collections</h4>\r\n          ) : (\r\n            <h3 className=\"link-cc\">Collections</h3>\r\n          )}\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter,\r\n  Link,\r\n  NavLink,\r\n  Route,\r\n  Switch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport Profile from \"../components/ProfilePage/Profile\";\r\nimport About from \"../components/ProfilePage/About\";\r\nimport Creations from \"../components/ProfilePage/Creations\";\r\nimport Collections from \"../components/ProfilePage/Collections\";\r\nimport Nav from \"../components/ProfilePage/Nav\";\r\nimport \"../components/ProfilePage/ProfilePage.css\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nconst ProfilePage = ({ account, isMobile }) => {\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    username: \"\",\r\n    about: \"\",\r\n    pfpHash: \"\",\r\n  });\r\n  const { id } = useParams();\r\n\r\n  const getUserData = async () => {\r\n    const url = `https://prnts-nfts.herokuapp.com/api/users/${id}`;\r\n    const res = await axios.get(url);\r\n    setUser(res.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserData();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  // const refresh = async () => {\r\n  //     window.location.reload();\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      {/* <div> */}\r\n      {account === id ? (\r\n        // <div onClick={refresh}>\r\n        <div>\r\n          <Link\r\n            exact\r\n            to={`/profile/${id}/edit-profile`}\r\n            className=\"btn edit-profile\"\r\n          >\r\n            {isMobile ? <h5>Edit Profile</h5> : <h3>Edit Profile</h3>}\r\n          </Link>\r\n        </div>\r\n      ) : null}\r\n      <BrowserRouter history={createBrowserHistory}>\r\n        <Profile\r\n          name={user.name}\r\n          username={user.username}\r\n          ethAddress={id}\r\n          pfpHash={user.pfpHash}\r\n        />\r\n        <div className=\"creations-collections\">\r\n          <Nav id={id} isMobile={isMobile} />\r\n          <Switch>\r\n            <Route path=\"/profile/:id\" exact component={Creations} />\r\n            <Route\r\n              path=\"/profile/:id/collections\"\r\n              exact\r\n              component={Collections}\r\n            />\r\n          </Switch>\r\n        </div>\r\n        {user.about && (\r\n          <>\r\n            <h3 style={{ margin: \"20px 20px 5px 25px\" }}>About</h3>\r\n            <About about={user.about} />\r\n          </>\r\n        )}\r\n        {/* </div> */}\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Bids.css\";\r\n\r\nconst Bids = ({ title, by, address }) => {\r\n  return (\r\n    <div className=\"bid-1\">\r\n      <div className=\"bid-by\">\r\n        <h3>{title}</h3>\r\n      </div>\r\n      <div className=\"gap-val\" />\r\n      <div className=\"bid-val\">\r\n        <Link to={`/profile/${address}`}>\r\n          <p>{by}</p>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bids;\r\n","import {useState} from 'react';\r\n\r\nconst useModal = () => {\r\n    const [isShowing, setIsShowing] = useState(false);\r\n\r\n    function toggle() {\r\n        setIsShowing(!isShowing);\r\n    }\r\n\r\n    return {\r\n        isShowing,\r\n        toggle,\r\n    }\r\n};\r\n\r\nexport default useModal;","import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport ReactLoading from \"react-loading\";\r\nimport { withRouter } from \"react-router\";\r\nimport \"./ApproveModal.css\";\r\nimport PrntNFTMarketplace from \"../../../ethereum/PrntNFTMarketplace\";\r\nimport web3 from \"../../../ethereum/web3\";\r\n\r\nconst Modal = ({\r\n  isShowing,\r\n  hide,\r\n  id,\r\n  tokenId,\r\n  PRNT_NFT_MARKETPLACE,\r\n  instance,\r\n  isApproved,\r\n  account,\r\n  totalOwners,\r\n}) => {\r\n  const [Approving, setApproving] = useState(false);\r\n  const [Trading, setTrading] = useState(false);\r\n  const [newPrice, setnewPrice] = useState(\"\");\r\n\r\n  const onApprove = async () => {\r\n    try {\r\n      //   console.log(instance);\r\n      //   console.log(PRNT_NFT_MARKETPLACE);\r\n      //   console.log(account);\r\n      setApproving(true);\r\n      await instance.methods\r\n        .setApprovalForAll(PRNT_NFT_MARKETPLACE, true)\r\n        .send({\r\n          from: account,\r\n        });\r\n      // alert(\"Approved!!\")\r\n      setApproving(false);\r\n      window.location.reload();\r\n    } catch (err) {\r\n      if (err) console.log(err);\r\n      alert(\"Approve not working..\");\r\n      setApproving(false);\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  const onOpenTrade = async () => {\r\n    // const newPrice = 10000; // wei\r\n    try {\r\n      setTrading(true);\r\n      totalOwners !== 1\r\n        ? await PrntNFTMarketplace.methods\r\n            .openTrade(id, tokenId, web3.utils.toWei(newPrice, \"ether\"))\r\n            .send({\r\n              from: account,\r\n            })\r\n        : await PrntNFTMarketplace.methods\r\n            .openTradeWhenCreateNewPrntNFT(\r\n              id,\r\n              tokenId,\r\n              web3.utils.toWei(newPrice, \"ether\")\r\n            )\r\n            .send({\r\n              from: account,\r\n            });\r\n      setTrading(false);\r\n      // alert(\"NFT open for trade\")\r\n      window.location.reload();\r\n    } catch (err) {\r\n      if (err) console.log(err);\r\n      setTrading(false);\r\n      alert(\"open trade not working..\");\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  return isShowing\r\n    ? ReactDOM.createPortal(\r\n        <React.Fragment>\r\n          <div className=\"modal-overlay\" />\r\n          <div\r\n            className=\"modal-wrapper\"\r\n            onClick={hide}\r\n            aria-modal\r\n            aria-hidden\r\n            tabIndex={-1}\r\n            role=\"dialog\"\r\n          >\r\n            <div className=\"modal\" onClick={(e) => e.stopPropagation()}>\r\n              <div className=\"modal-header\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"modal-close-button\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                  onClick={hide}\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-content\">\r\n                <div className=\"card\">\r\n                  {!isApproved ? (\r\n                    <>\r\n                      <p className=\"content-title\">\r\n                        To open your NFT for trade you have to give approval to\r\n                        the smart contract.\r\n                      </p>\r\n                      <br />\r\n                      <button\r\n                        className=\"btn but-ton\"\r\n                        onClick={onApprove}\r\n                        disabled={isApproved}\r\n                        style={{\r\n                          color: isApproved ? \"grey\" : \"black\",\r\n                        }}\r\n                      >\r\n                        {/* Approve */}\r\n                        {Approving && (\r\n                          <ReactLoading type=\"bubbles\" height={30} width={30} />\r\n                        )}\r\n                        {!Approving && <h4>Approve</h4>}\r\n                      </button>\r\n                    </>\r\n                  ) : (\r\n                    <h2\r\n                      style={{\r\n                        color: \"#a3d0d2db\",\r\n                        alignSelf: \"center\",\r\n                        justifySelf: \"center\",\r\n                      }}\r\n                    >\r\n                      Approved!\r\n                    </h2>\r\n                  )}\r\n                </div>\r\n                <div className=\"card\">\r\n                  <p className=\"content-tile\">\r\n                    {isApproved ? (\r\n                      <div>\r\n                        <p>Now you can open for trade.</p>\r\n                        <input\r\n                          className=\"user-input\"\r\n                          style={{\r\n                            width: \"250px\",\r\n                          }}\r\n                          placeholder=\"Trade price in MATIC\"\r\n                          value={newPrice}\r\n                          onChange={(e) => setnewPrice(e.target.value)}\r\n                        />\r\n                      </div>\r\n                    ) : (\r\n                      \"After approval you can open for trade.\"\r\n                    )}\r\n                  </p>\r\n                  <br />\r\n                  <button\r\n                    className=\"btn but-ton\"\r\n                    onClick={onOpenTrade}\r\n                    disabled={!isApproved}\r\n                    style={{\r\n                      color: !isApproved ? \"grey\" : \"black\",\r\n                    }}\r\n                  >\r\n                    {/* Open for trade */}\r\n                    {Trading && (\r\n                      <ReactLoading type=\"bubbles\" height={30} width={30} />\r\n                    )}\r\n                    {!Trading && <h4>Open for Trade</h4>}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>,\r\n        document.body\r\n      )\r\n    : null;\r\n};\r\n\r\nexport default withRouter(Modal);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n// import { ReactVideo, ReactAudio, YoutubePlayer } from \"reactjs-media\";\r\nimport ReactPlayer from \"react-player\";\r\nimport \"../components/Art/Art.css\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport ReactLoading from \"react-loading\";\r\nimport { FaExternalLinkAlt } from \"react-icons/fa\";\r\nimport Bids from \"../components/Art/Bids/Bids\";\r\nimport web3 from \"../ethereum/web3\";\r\nimport PrntNFTData from \"../ethereum/PrntNFTData\";\r\nimport PrntNFTMarketplace from \"../ethereum/PrntNFTMarketplace\";\r\nimport PrntNFT from \"../ethereum/build/PrntNFT.json\";\r\nimport PrntNFTFactory from \"../ethereum/PrntNFTFactory\";\r\n\r\nimport Modal from \"../components/Art/ApproveModal/ApproveModal\";\r\nimport useModal from \"../hooks/useModal\";\r\nimport {Grid} from '@mui/material';\r\n\r\nimport axios from \"axios\";\r\n\r\nconst LinkToProfile = styled(Link)`\r\n  display: grid;\r\n  height: 100px;\r\n  width: 100px;\r\n  border-radius: 100px;\r\n  /* background: rgb(233, 233, 233); */\r\n  background: #e9eff0;\r\n  /* box-shadow: 3px 3px 7px #d3d3d3, -1px -2px 30px #f8f8f8; */\r\n  box-shadow: 5px 5px 12px #dbe1e2, -5px -5px 12px #f7fdfe;\r\n  align-self: center;\r\n  overflow: hidden;\r\n  margin-top: 10px;\r\n  justify-content: center;\r\n  align-content: center;\r\n\r\n  img {\r\n    width: 100px;\r\n    height: auto;\r\n    border-radius: 100px;\r\n  }\r\n`;\r\n\r\nconst Art = ({ account, isMobile }) => {\r\n  const { id, tokenId } = useParams();\r\n\r\n  let history = useHistory();\r\n\r\n  const { isShowing, toggle } = useModal();\r\n\r\n  const [prnt, setprnt] = useState([\"\", \"\", \"\"]);\r\n  const [totalOwners, settotalOwners] = useState(1);\r\n  // const [account, setaccount] = useState(null)\r\n  // const [Account, setAccount] = useState(\"\")\r\n  const [status, setstatus] = useState(\"\");\r\n  const [PRNT_NFT_MARKETPLACE, setPRNT_NFT_MARKETPLACE] = useState(\"\");\r\n  const [listBids, setlistBids] = useState(null);\r\n  const [Loading, setLoading] = useState(false);\r\n  const [instance, setInstance] = useState();\r\n  const [isApproved, setIsApproved] = useState(false);\r\n  const [ownerArray, setOwnerArray] = useState([\"\"]);\r\n  const [prntPrice, setprntPrice] = useState(\"0\");\r\n  const [tokenURI, settokenURI] = useState({ attributes: [{ value: 1 }] });\r\n  const [edition, setEdition] = useState(tokenId);\r\n  const [listEditions, setListEditions] = useState(null);\r\n  const [creator, setCreator] = useState({\r\n    name: \"\",\r\n    username: \"\",\r\n    about: \"\",\r\n    pfpHash: \"\",\r\n  });\r\n\r\n  const VideoWrapper = styled.div`\r\n    width: ${isMobile} ? 100vw : 70vw\r\n  `;\r\n\r\n  //bytes32 for \"Open\"\r\n  const open =\r\n    \"0x4f70656e00000000000000000000000000000000000000000000000000000000\";\r\n  //bytes32 from \"Cancelled\"\r\n  // const cancelled = \"0x43616e63656c6c65640000000000000000000000000000000000000000000000\"\r\n\r\n  // console.log(id);\r\n  const getPrnt = async () => {\r\n    try {\r\n      // const accounts = await web3.eth.getAccounts();\r\n      // console.log(accounts[0])\r\n      // setaccount(accounts[0])\r\n      // setaccount(accounts[0])\r\n      //   console.log(\"account:\", account);\r\n      const prnt = await PrntNFTData.methods.getPrntByNFTAddress(id).call();\r\n      const tokenUri = prnt.tokenUri;\r\n      const tokenURI = await (await fetch(tokenUri)).json();\r\n      settokenURI(tokenURI);\r\n      //   console.log(\"tokenUri\", tokenURI);\r\n      const { prntPrice, status } = await PrntNFTData.methods\r\n        .tokensByAddress(id, tokenId)\r\n        .call();\r\n      // console.log(prntPrice);\r\n      setprntPrice(prntPrice);\r\n      console.log(\"id: \", id, \"tokenId: \", tokenId);\r\n      const ownerArray = await PrntNFTData.methods\r\n        .getOwnerOfToken(id, tokenId)\r\n        .call();\r\n      console.log(\"owner array calc: \", ownerArray);\r\n      const totalOwners = ownerArray.length;\r\n      setOwnerArray(ownerArray);\r\n      settotalOwners(totalOwners);\r\n      const trade = await PrntNFTMarketplace.methods\r\n        .getTrade(id, tokenId)\r\n        .call();\r\n      const PRNT_NFT_MARKETPLACE = await PrntNFTFactory.methods\r\n        .prntNFTMarketplace()\r\n        .call();\r\n      setPRNT_NFT_MARKETPLACE(PRNT_NFT_MARKETPLACE);\r\n      setstatus(trade.status);\r\n      const instance = new web3.eth.Contract(\r\n        PrntNFT.abi,\r\n        id //PrntNFT address\r\n      );\r\n      setInstance(instance);\r\n      //   console.log(prnt);\r\n\r\n      setprnt(prnt);\r\n\r\n      if (account) {\r\n        const isApproved = await instance.methods\r\n          .isApprovedForAll(account, PRNT_NFT_MARKETPLACE)\r\n          .call();\r\n        setIsApproved(isApproved);\r\n      }\r\n    } catch (err) {\r\n      // alert(\"You need to install metamask and connect your wallet.\");\r\n      if (err) console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPrnt();\r\n  }, [account, isApproved]);\r\n\r\n  const onBuy = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      setLoading(true);\r\n\r\n      await PrntNFTMarketplace.methods.buyPrntNFT(id, tokenId).send({\r\n        from: account,\r\n        value: prntPrice,\r\n        gas: \"500000\",\r\n      });\r\n      setLoading(false);\r\n      // alert(`Bought ${prnt.prntNFTName} NFT successfully`)\r\n      window.location.reload();\r\n    } catch (err) {\r\n      console.log(err);\r\n      setLoading(false);\r\n      alert(\"Not enough funds.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    try {\r\n      console.log(\"owner array in list bids: \", ownerArray);\r\n      if (ownerArray.length > 0) {\r\n        const listBids = ownerArray.map((address) => {\r\n          return (\r\n            <Bids\r\n              key={address}\r\n              address={address}\r\n              title={address === ownerArray[0] ? \"Created by\" : \"Owned by\"}\r\n              by={`@${address.slice(0, 6)}....${address.slice(-7)}`}\r\n            />\r\n          );\r\n        });\r\n        listBids.reverse();\r\n        setlistBids(listBids);\r\n      }\r\n\r\n      const no_of_editions = tokenURI.attributes[0].value;\r\n      // const edition[no_of_editions];\r\n      const listNoOfEditions = () => {\r\n        let listEditions = [];\r\n        for (let i = 1; i <= no_of_editions; i++) {\r\n          listEditions.push(<option value={i}>{i}</option>);\r\n        }\r\n        setListEditions(listEditions);\r\n      };\r\n      listNoOfEditions();\r\n    } catch (err) {\r\n      if (err) console.log(err);\r\n    }\r\n  }, [prnt, ownerArray]);\r\n\r\n  const selectEdition = (e) => {\r\n    setEdition(e.target.value);\r\n    history.push(`/music/${id}/${e.target.value}`);\r\n    window.location.reload();\r\n  };\r\n\r\n  const getCreatorData = async () => {\r\n    const url = `https://prnts-nfts.herokuapp.com/api/users/${ownerArray[0]}`;\r\n    const res = await axios.get(url);\r\n    setCreator(res.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCreatorData();\r\n  }, [ownerArray]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <>\r\n      <div style={{ maxWidth: \"100vw\" }}>\r\n        {/* <h1>Artwork display</h1> */}\r\n        {/* art piece */}\r\n        \r\n        {/* creator and owner */}\r\n        {/* <div className=\"det\">\r\n          <div className=\"css-4cffwv\">\r\n            <Link to={`/profile/${ownerArray[0]}`}>\r\n              <div className=\"css-1mitdaa\">\r\n                <p>\r\n                  @\r\n                  {ownerArray.length > 0\r\n                    ? `${ownerArray[0].slice(0, 6)}....${ownerArray[0].slice(\r\n                        -7\r\n                      )}`\r\n                    : \"\"}\r\n                </p>\r\n              </div>\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"css-ykl0r1\">\r\n            <div className=\"css-yk10r2\">\r\n              <Link to={`/profile/${ownerArray[totalOwners - 1]}`}>\r\n                <div className=\"css-3ts36d\">\r\n                  <p>\r\n                    @\r\n                    {ownerArray.length > 0\r\n                      ? `${ownerArray[totalOwners - 1].slice(\r\n                          0,\r\n                          6\r\n                        )}....${ownerArray[totalOwners - 1].slice(-7)}`\r\n                      : \"\"}\r\n                  </p>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n        {/* description & history */}\r\n        <div className=\"desc-his\">\r\n          <div className=\"desc\">\r\n            <div className=\"desc-1\">\r\n              {/* <h2>Description</h2> */}\r\n              <div\r\n                style={{\r\n                  // padding: \"10px 0px\"\r\n                  display: \"grid\",\r\n                  gridGap: \"10px\",\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    gap: \"2vw\",\r\n                    // flexDirection: 'row',\r\n                    // flexWrap: 'wrap',\r\n                    flexFlow: \"row wrap\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"baseline\",\r\n                  }}\r\n                >\r\n                  <div>\r\n                    {/* \r\n                    <h3>{tokenURI.name}</h3>\r\n                    <h4>{tokenURI.symbol}</h4>\r\n                    */}\r\n                    <h3 style={{ textAlign: \"center\" }}>\r\n                      Welcome to {tokenURI.name}'s Project!\r\n                    </h3>\r\n                  </div>\r\n                  {/*\r\n                    <div className=\"editions-dropdown\">\r\n                    <h3>Edition</h3>\r\n                    <select value={edition} onChange={selectEdition}>\r\n                      {listEditions}\r\n                    </select>\r\n                  </div>\r\n                  */}\r\n                </div>\r\n              </div>\r\n              <span style={{ margin: \"10px\" }}>{tokenURI.description}</span>\r\n              {/* Profile image */}\r\n              <LinkToProfile to={`/profile/${ownerArray[0]}`}>\r\n                <img\r\n                  src={\r\n                    creator.pfpHash\r\n                      ? `https://prnts.mypinata.cloud/ipfs/${creator.pfpHash}`\r\n                      : null\r\n                  }\r\n                  alt=\"\"\r\n                />\r\n              </LinkToProfile>\r\n                \r\n              <Grid container justifyContent=\"space-between\">\r\n                    <Grid item >\r\n                    <button className=\"btn\" >\r\n                    <h4>share</h4>\r\n                    \r\n                </button>\r\n           \r\n                    </Grid>\r\n                    <Grid item>\r\n                    <button className=\"btn\" onClick={onBuy} disabled={Loading}>\r\n                    {!Loading && <h4>follow</h4>}\r\n                    {Loading && (\r\n                      <ReactLoading type=\"bubbles\" height=\"30px\" width=\"30px\" />\r\n                    )}\r\n                </button>\r\n           \r\n                    </Grid>\r\n                </Grid>\r\n              {/* <p>Animation and music created by Nacho </p>\r\n                        <p>1400x1400</p>\r\n                        <p>30fps</p> */}\r\n            </div>\r\n            \r\n          </div>\r\n\r\n          {/* History */}\r\n\r\n          {/*\r\n              <div className=\"his-1\">\r\n              <h2>History</h2>\r\n              <div className=\"bids-1\">{listBids}</div>\r\n            </div>\r\n            */}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Art;\r\n","import web3 from \"./web3\";\r\nimport MockProfileCreationProxy from \"./build/MockProfileCreationProxy.json\";\r\n\r\nconst instance = new web3.eth.Contract(\r\n  MockProfileCreationProxy.abi,\r\n  \"0x08C4fdC3BfF03ce4E284FBFE61ba820c23722540\"\r\n);\r\n\r\nexport default instance;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ReactLoading from \"react-loading\";\r\nimport \"../components/Create/Create.css\";\r\nimport web3 from \"../ethereum/web3\";\r\nimport PrntNFTFactory from \"../ethereum/PrntNFTFactory\";\r\nimport PreviewCard from \"../components/Artworks/Card/Card\";\r\n// import { isMobile } from 'web3modal';\r\nimport LensHub from '../ethereum/LensHub'\r\nimport MockProfileCreationProxy from '../ethereum/MockProfileCreationProxy'\r\nconst axios = require(\"axios\");\r\nconst FormData = require(\"form-data\");\r\n\r\nconst Create = ({ account, isMobile }) => {\r\n  const pinataApiKey = process.env.REACT_APP_PINATA_API_KEY;\r\n  const pinataSecretApiKey = process.env.REACT_APP_PINATA_SECRET_API_KEY;\r\n\r\n  const [name, setname] = useState(\"\");\r\n  const [symbol, setsymbol] = useState(\"\");\r\n  const [description, setdescription] = useState(\"\");\r\n  const [royalties, setRoyalties] = useState(\"\");\r\n  const [editions, setEditions] = useState(\"\");\r\n  const [price, setprice] = useState(\"\");\r\n  // const [ipfsHash, setipfsHash] = useState(null);\r\n  const [videoHash, setVideoHash] = useState(null);\r\n  const [imageHash, setImageHash] = useState(null);\r\n  // const [accounts, setaccounts] = useState([]);\r\n  const [Loading, setLoading] = useState(false);\r\n  const [videoUpload, setvideoUpload] = useState(false);\r\n  const [imageUpload, setimageUpload] = useState(false);\r\n  const [selectedVideo, setselectedVideo] = useState(null);\r\n  const [selectedImage, setselectedImage] = useState(null);\r\n\r\n  let history = useHistory();\r\n\r\n  const pinVideoToIPFS = async (e) => {\r\n    e.preventDefault();\r\n    setvideoUpload(true);\r\n    const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\r\n    const data = new FormData();\r\n    data.append(\"file\", selectedVideo);\r\n    // alert(\"pinning to pinata\")\r\n    try {\r\n      // const accounts = await web3.eth.getAccounts();\r\n      // setaccounts(accounts);\r\n      const res = await axios.post(url, data, {\r\n        maxContentLength: \"Infinity\",\r\n        headers: {\r\n          \"Content-Type\": `multipart/form-data; boundary=${data._boundary}`,\r\n          pinata_api_key: pinataApiKey,\r\n          pinata_secret_api_key: pinataSecretApiKey,\r\n        },\r\n      });\r\n      setVideoHash(res.data.IpfsHash);\r\n      // alert(res.data.IpfsHash)\r\n      setvideoUpload(false);\r\n      // console.log(res.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setvideoUpload(false);\r\n    }\r\n  };\r\n\r\n  const pinImageToIPFS = async (e) => {\r\n    e.preventDefault();\r\n    setimageUpload(true);\r\n    const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\r\n    const data = new FormData();\r\n    data.append(\"file\", selectedImage);\r\n    // alert(\"pinning to pinata\")\r\n    try {\r\n      // const accounts = await web3.eth.getAccounts();\r\n      // setaccounts(accounts);\r\n      const res = await axios.post(url, data, {\r\n        maxContentLength: \"Infinity\",\r\n        headers: {\r\n          \"Content-Type\": `multipart/form-data; boundary=${data._boundary}`,\r\n          pinata_api_key: pinataApiKey,\r\n          pinata_secret_api_key: pinataSecretApiKey,\r\n        },\r\n      });\r\n      setImageHash(res.data.IpfsHash);\r\n      // alert(res.data.IpfsHash)\r\n      setimageUpload(false);\r\n      // console.log(res.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setimageUpload(false);\r\n    }\r\n  };\r\n\r\n  const metadata = {\r\n    pinataMetadata: {\r\n      name: `${name}.json`,\r\n    },\r\n    pinataContent: {\r\n      name: name,\r\n      symbol: symbol,\r\n      description: description,\r\n      // no_of_editions: editions,\r\n      // category: category,\r\n      image: `https://prnts.mypinata.cloud/ipfs/${videoHash}`,\r\n      imageHash: imageHash,\r\n      // external_url: `http://prnts.netlify.app/music`,\r\n      background_color: \"b2d8d8\",\r\n      attributes: [\r\n        {\r\n          display_type: \"number\",\r\n          trait_type: \"Total Editions\",\r\n          value: editions ? editions : \"1\",\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  // const {name, symbol, description, category, imageHash, videoHash} = metadata.pinataContent;\r\n\r\n  const onCreateNewNFT = async (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n\r\n    const url = `https://api.pinata.cloud/pinning/pinJSONToIPFS`;\r\n\r\n    try {\r\n      // const res = await axios.post(url, metadata, {\r\n      //   maxContentLength: \"Infinity\",\r\n      //   // __filename: `${metadata.name}.json`,\r\n      //   headers: {\r\n      //     // 'Content-Type': `application/json; boundary=${data._boundary}`,\r\n      //     pinata_api_key: pinataApiKey,\r\n      //     pinata_secret_api_key: pinataSecretApiKey,\r\n      //   },\r\n      // });\r\n\r\n      // // if (!res.success) {\r\n      // //     return {\r\n      // //         success: false,\r\n      // //         status:\r\n      // //             '😢 Something went wrong while uploading your tokenURI.',\r\n      // //     };\r\n      // // }\r\n\r\n      // // console.log(res.data);\r\n      // const tokenURI = res.data.IpfsHash;\r\n      // console.log(\r\n      //   \"argg: \",\r\n      //   name,\r\n      //   symbol,\r\n      //   tokenURI,\r\n      //   web3.utils.toWei(price, \"ether\"),\r\n      //   editions ? editions : \"1\",\r\n      //   royalties\r\n      // );\r\n      const config = {\r\n        from: account,\r\n      }\r\n    // const estimatedGas = await LensHub.methods.whitelistProfileCreator(account,true).estimateGas(config)\r\n    // await LensHub.methods.whitelistProfileCreator(account,true).send({...config, gas: 999999})\r\n      const inputStruct = {\r\n        to:account,\r\n        handle: name,\r\n        imageURI:\r\n        'https://prnts.mypinata.cloud/ipfs/' + imageHash,\r\n        followModule: '0x0000000000000000000000000000000000000000',\r\n        followModuleData: [],\r\n        followNFTURI:\r\n          'https://prnts.mypinata.cloud/ipfs/' + imageHash,\r\n      };\r\n      // const estimatedGas2 = await LensHub.methods.createProfile(inputStruct).estimateGas(config)\r\n      await MockProfileCreationProxy.methods.proxyCreateProfile(inputStruct).send({...config, gas: 999999})\r\n      // contract will have name, symbol, tokenUri - ERC721 constructor(name, symbol)\r\n      // await PrntNFTFactory.methods\r\n      //   .createNewPrntNFT(\r\n      //     name,\r\n      //     symbol,\r\n      //     tokenURI,\r\n      //     web3.utils.toWei(price, \"ether\"),\r\n      //     editions ? editions : \"1\",\r\n      //     royalties\r\n      //   )\r\n      //   .send({\r\n      //     from: account,\r\n      //     // gasLimit: \"3495141\",\r\n      //   });\r\n\r\n      // await PrntNFTFactory.methods\r\n      //     .createNewPrntNFT(\r\n      //         name,\r\n      //         symbol,\r\n      //         web3.utils.toWei(price, 'ether'),\r\n      //         videoHash,\r\n      //         imageHash\r\n      //     )\r\n      //     .send({\r\n      //         from: account,\r\n      //     });\r\n      setLoading(false);\r\n      // // alert(\"NFT minted successfully!\")\r\n      // return <Redirect to=\"/music\" />;\r\n      history.push(\"/\");\r\n      // window.location.reload();\r\n    } catch (err) {\r\n      console.log(err);\r\n      setLoading(false);\r\n      // return <Redirect to=\"/music\" />;\r\n      // history.push('/music');\r\n\r\n      alert(\"Enter values correctly.\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-nfts-container\">\r\n      <div className=\"form-title\">\r\n        <h3>Create NFTs</h3>\r\n      </div>\r\n      <div className=\"fields\">\r\n        <div className=\"upload-field\">\r\n          <div className=\"upload-box\">\r\n            {/* <h2 style={{ margin: '10px 50px 10px 50px' }}>Create NFTS</h2> */}\r\n            <div className=\"uploads\">\r\n              \r\n              {!imageHash ? (\r\n                <div\r\n                  className={isMobile ? \"upload-file mobile\" : \"upload-file\"}\r\n                >\r\n                  <div className=\"upload-text\">\r\n                    <h3>Upload Thumbnail</h3>\r\n                    <p>We recommend image size to be 282px x 260px.</p>\r\n                  </div>\r\n                  <div className=\"choose-file\">\r\n                    <form onSubmit={pinImageToIPFS}>\r\n                      {/* <input type=\"file\" accept=\"image/*\" onChange={captureFile} /> */}\r\n                      <input\r\n                        type=\"file\"\r\n                        className=\"custom-file-input\"\r\n                        accept=\"image/*\"\r\n                        // value={selectedFile || ''}\r\n                        onChange={(e) => setselectedImage(e.target.files[0])}\r\n                      />\r\n                      <button type=\"submit\" className=\"btn\">\r\n                        {!imageUpload && <h4>Upload Cover</h4>}\r\n                        {imageUpload && (\r\n                          <ReactLoading\r\n                            type={\"bubbles\"}\r\n                            height={30}\r\n                            width={30}\r\n                          />\r\n                        )}\r\n                      </button>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className={isMobile ? \"upload-file mobile\" : \"upload-file\"}\r\n                >\r\n                  <h2 style={{ color: \"#a3d0d2db\" }}>Cover Uploaded!</h2>\r\n                  <span>{selectedImage.name}</span>\r\n                  {/* <h4 style={{marginTop: \"40px\"}}>Please enter rest details...</h4> */}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"preview-detail-field\">\r\n          <div className=\"preview-field\">\r\n            <PreviewCard\r\n              artistName={name}\r\n              title={`# ${name} - ${symbol}`}\r\n              username={`${account.slice(0, 6)}....${account.slice(-7, -1)}`}\r\n              price={`${price} MATIC`}\r\n              imageUrl={`https://prnts.mypinata.cloud/ipfs/${imageHash}`}\r\n              editions={editions ? editions : 1}\r\n            />\r\n          </div>\r\n          <div className=\"detail-field\">\r\n            <div className=\"nft-name\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"user-input\"\r\n                placeholder=\"Name\"\r\n                value={name}\r\n                onChange={(e) => setname(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"nft-symbol\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"user-input\"\r\n                placeholder=\"Symbol\"\r\n                value={symbol}\r\n                onChange={(e) => setsymbol(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"nft-description\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"user-input\"\r\n                placeholder=\"Description (optional)\"\r\n                value={description}\r\n                onChange={(e) => setdescription(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"inputs-same-line\">\r\n              <div className=\"nft-editions\">\r\n                <input\r\n                  type=\"number\"\r\n                  min=\"1\"\r\n                  step=\"1\"\r\n                  max=\"90\"\r\n                  // name=\"\"\r\n                  className=\"user-input small\"\r\n                  placeholder=\"Editions\"\r\n                  title=\"No. of Editions (Integers only, Max upto 90)\"\r\n                  value={editions}\r\n                  onChange={(e) => {\r\n                    if (e.target.value <= 90) setEditions(e.target.value);\r\n                    else setEditions(90);\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"nft-royalties\">\r\n                <input\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  max=\"10\"\r\n                  step=\"0.01\"\r\n                  title=\"Max upto 10%\"\r\n                  className=\"user-input small\"\r\n                  placeholder=\"Royalties in %\"\r\n                  value={royalties}\r\n                  onChange={(e) => {\r\n                    if (e.target.value <= 10) setRoyalties(e.target.value);\r\n                    else setRoyalties(10);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"nft-price\">\r\n              <input\r\n                type=\"number\"\r\n                min=\"0\"\r\n                step=\"0.0000000001\"\r\n                required\r\n                className=\"user-input\"\r\n                placeholder=\"Price in MATIC\"\r\n                title=\"Allowed till 10 decimal places, i.e min. 10^8 wei\"\r\n                value={price}\r\n                onChange={(e) => setprice(e.target.value)}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"grid\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                padding: \"10px 0px\",\r\n              }}\r\n            >\r\n              <p style={{ fontFamily: \"cursive\" }}>\r\n                {`Marketplace fees: \r\n                                1st sale - 10%,\r\n                                others - 3%`}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button\r\n        type=\"submit\"\r\n        className=\"btn\"\r\n        style={{\r\n          marginTop: \"20px\",\r\n        }}\r\n        onClick={onCreateNewNFT}\r\n        disabled={Loading}\r\n      >\r\n        {Loading && <ReactLoading type={\"bubbles\"} height={30} width={30} />}\r\n        {!Loading && <h4>Create</h4>}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: grid;\r\n  align-content: center;\r\n  justify-items: center;\r\n`;\r\n\r\nexport const Preview = styled.div`\r\n  height: 150px;\r\n  width: 150px;\r\n  border-radius: 150px;\r\n  background: #e9eff0;\r\n  box-shadow: 5px 5px 12px #dbe1e2, -5px -5px 12px #f7fdfe;\r\n  margin: 20px 10px;\r\n  display: grid;\r\n  align-items: center;\r\n  justify-items: center;\r\n\r\n  img {\r\n    max-height: 150px;\r\n    max-width: 150px;\r\n    border-radius: 1000px;\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  color: grey;\r\n  position: relative;\r\n`;\r\n\r\nexport const UploadButton = styled.div`\r\n  margin: 5px 0px 20px 0px;\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n`;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport { Container, Preview, Text, UploadButton } from \"./ProfilePic.elements\";\r\nimport ReactLoading from \"react-loading\";\r\nconst axios = require(\"axios\");\r\n\r\nconst ProfilePic = ({ imageHash, setImageHash, user, setUser }) => {\r\n  const pinataApiKey = process.env.REACT_APP_PINATA_API_KEY;\r\n  const pinataSecretApiKey = process.env.REACT_APP_PINATA_SECRET_API_KEY;\r\n\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [imageUpload, setImageUpload] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!selectedImage) return;\r\n\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(selectedImage);\r\n  }, [selectedImage]);\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  const pinImageToIPFS = async (e) => {\r\n    e.preventDefault();\r\n    setImageUpload(true);\r\n    const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\r\n    const data = new FormData();\r\n    data.append(\"file\", selectedImage);\r\n    // alert(\"pinning to pinata\")\r\n    try {\r\n      // const accounts = await web3.eth.getAccounts();\r\n      // setaccounts(accounts);\r\n      const res = await axios.post(url, data, {\r\n        maxContentLength: \"Infinity\",\r\n        headers: {\r\n          \"Content-Type\": `multipart/form-data; boundary=${data._boundary}`,\r\n          pinata_api_key: pinataApiKey,\r\n          pinata_secret_api_key: pinataSecretApiKey,\r\n        },\r\n      });\r\n      setImageHash(res.data.IpfsHash);\r\n      setUser({\r\n        ...user,\r\n        pfpHash: res.data.IpfsHash,\r\n      });\r\n      //   alert(res.data.IpfsHash);\r\n      setImageUpload(false);\r\n      // console.log(res.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setImageUpload(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <input\r\n        ref={filePickerRef}\r\n        type=\"file\"\r\n        style={{ display: \"none\" }}\r\n        accept=\"image/*\"\r\n        onChange={(e) => setSelectedImage(e.target.files[0])}\r\n      />\r\n      <Preview onClick={pickImageHandler}>\r\n        {previewUrl ? (\r\n          <img\r\n            src={previewUrl}\r\n            alt={selectedImage ? selectedImage.name : \"Preview\"}\r\n          />\r\n        ) : user.pfpHash ? (\r\n          <img\r\n            src={`https://prnts.mypinata.cloud/ipfs/${user.pfpHash}`}\r\n            alt={selectedImage ? selectedImage.name : \"Preview\"}\r\n          />\r\n        ) : (\r\n          <Text>Pick a Profile pic</Text>\r\n        )}\r\n      </Preview>\r\n      {previewUrl ? (\r\n        imageHash ? (\r\n          <UploadButton className=\"btn\">Uploaded!</UploadButton>\r\n        ) : (\r\n          <UploadButton className=\"btn\" onClick={pinImageToIPFS}>\r\n            {!imageUpload ? (\r\n              <span>Upload Image</span>\r\n            ) : (\r\n              <ReactLoading type={\"bubbles\"} height={30} width={30} />\r\n            )}\r\n          </UploadButton>\r\n        )\r\n      ) : null}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProfilePic;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams, Redirect } from \"react-router-dom\";\r\nimport ReactLoading from \"react-loading\";\r\nimport \"../components/EditProfile/EditProfile.css\";\r\nimport ProfilePic from \"../components/EditProfile/ProfilePic\";\r\nimport styled from \"styled-components\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nconst TextArea = styled.textarea`\r\n  font-family: \"Poppins\";\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n  width: 320px;\r\n  height: 180px;\r\n  background: #e9eff0;\r\n  box-shadow: inset 5px 5px 12px #dbe1e2, inset -5px -5px 12px #f7fdfe;\r\n  border: none;\r\n  border-radius: 20px;\r\n  outline: none;\r\n  padding: 10px 10px 10px 20px;\r\n  margin: 10px 0px;\r\n`;\r\n\r\nconst EditProfile = ({ account }) => {\r\n  const [imageHash, setImageHash] = useState(null);\r\n\r\n  const [user, setUser] = useState({\r\n    id: account,\r\n    name: \"\",\r\n    username: \"\",\r\n    about: \"\",\r\n    pfpHash: \"\",\r\n  });\r\n  const [Loading, setLoading] = useState(false);\r\n\r\n  let history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const getUserData = async () => {\r\n    // console.log(\"id:\", id);\r\n    // console.log(\"account:\", account);\r\n    try {\r\n      const url_get = `https://prnts-nfts.herokuapp.com/api/users/${account}`;\r\n      const { data } = await axios.get(url_get);\r\n      let user = {\r\n        id: account,\r\n        name: data.name,\r\n        username: data.username,\r\n        about: data.about,\r\n        pfpHash: data.pfpHash,\r\n      };\r\n      setUser(user);\r\n    } catch (err) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (account && id !== account) {\r\n      history.push(`/profile/${account}/edit-profile`);\r\n      window.location.reload();\r\n    }\r\n    getUserData();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const editUserProfile = async (e) => {\r\n    // e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      const url_get = `https://prnts-nfts.herokuapp.com/api/users/${account}`;\r\n      const get_res = await axios.get(url_get);\r\n\r\n      const res = await axios.patch(url_get, user);\r\n      // console.log(res.data);\r\n    } catch (err) {\r\n      try {\r\n        const url_post = \"https://prnts-nfts.herokuapp.com/api/users\";\r\n        const res = await axios.post(url_post, user);\r\n        // console.log(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n        setLoading(false);\r\n      }\r\n    }\r\n    history.push(`/profile/${user.id}`);\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"edit-profile-container\">\r\n      <div className=\"form-title\">\r\n        <h3>Edit Profile</h3>\r\n      </div>\r\n      <ProfilePic\r\n        user={user}\r\n        setUser={setUser}\r\n        imageHash={imageHash}\r\n        setImageHash={setImageHash}\r\n      />\r\n      <div className=\"fields\">\r\n        <div className=\"detail-field\">\r\n          <div className=\"nft-name\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"user-input\"\r\n              placeholder=\"Name\"\r\n              value={user.name}\r\n              onChange={(e) => {\r\n                setUser({\r\n                  ...user,\r\n                  name: e.target.value,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"nft-symbol\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"user-input\"\r\n              placeholder=\"@username\"\r\n              value={user.username}\r\n              onChange={(e) => {\r\n                setUser({\r\n                  ...user,\r\n                  username: e.target.value,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          {/* <div className=\"nft-description\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"user-input\"\r\n                            placeholder=\"About yourself...\"\r\n                            value={user.about}\r\n                            onChange={(e) => {\r\n                                setUser({\r\n                                    ...user,\r\n                                    about: e.target.value,\r\n                                });\r\n                            }}\r\n                        />\r\n                    </div> */}\r\n          <TextArea\r\n            type=\"text\"\r\n            // cols=\"100\"\r\n            // rows=\"5\"\r\n            wrap=\"true\"\r\n            maxLength={1000}\r\n            required\r\n            placeholder=\"About yourself...\"\r\n            value={user.about}\r\n            onChange={(e) => {\r\n              setUser({\r\n                ...user,\r\n                about: e.target.value,\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <button className=\"btn save\" onClick={editUserProfile}>\r\n          {Loading ? (\r\n            <ReactLoading type={\"bubbles\"} height={30} width={30} />\r\n          ) : (\r\n            <h3>Save</h3>\r\n          )}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReactLoading from \"react-loading\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nconst axios = require(\"axios\");\r\n\r\nconst Container = styled.div`\r\n  margin: auto;\r\n  margin-top: 8vh;\r\n  display: grid;\r\n  align-items: center;\r\n  justify-items: center;\r\n  justify-content: center;\r\n  box-shadow: inset 5px 5px 12px #dbe1e2, inset -5px -5px 12px #f7fdfe;\r\n  width: fit-content;\r\n  padding: 30px 5vw;\r\n  border-radius: 30px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-top: 40px;\r\n  display: grid;\r\n  justify-items: center;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  font-family: \"Poppins\";\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n  width: 350px;\r\n  background: #e9eff0;\r\n  box-shadow: inset 5px 5px 12px #dbe1e2, inset -5px -5px 12px #f7fdfe;\r\n  border: none;\r\n  border-radius: 50px;\r\n  outline: none;\r\n  padding: 10px 10px 10px 20px;\r\n  margin: 10px 0px;\r\n`;\r\n\r\nconst TextArea = styled.textarea`\r\n  font-family: \"Poppins\";\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n  width: 350px;\r\n  height: 200px;\r\n  background: #e9eff0;\r\n  box-shadow: inset 5px 5px 12px #dbe1e2, inset -5px -5px 12px #f7fdfe;\r\n  border: none;\r\n  border-radius: 20px;\r\n  outline: none;\r\n  padding: 10px 10px 10px 20px;\r\n  margin: 10px 0px;\r\n`;\r\n\r\nconst RequestForApproval = ({ account }) => {\r\n  const [links, setLinks] = useState({\r\n    twitter: \"\",\r\n    instagram: \"\",\r\n    email: \"\",\r\n    website: \"\",\r\n    other: \"\",\r\n  });\r\n  const [description, setDescription] = useState(\"\");\r\n  const [doRequestExist, setDoRequestExist] = useState(false);\r\n  const [Loading, setLoading] = useState(false);\r\n\r\n  let history = useHistory();\r\n\r\n  const getRequestData = async () => {\r\n    const url = `https://prnts-nfts.herokuapp.com/api/approvalRequests/${account}`;\r\n    try {\r\n      const { data } = await axios.get(url);\r\n      setLinks(data.request.links);\r\n      setDescription(data.request.description);\r\n      setDoRequestExist(true);\r\n    } catch (err) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRequestData();\r\n  }, []);\r\n\r\n  const sendApprovalRequest = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const url_post = \"https://prnts-nfts.herokuapp.com/api/approvalRequests\";\r\n    const url_get = `https://prnts-nfts.herokuapp.com/api/approvalRequests/${account}`;\r\n    const ApprovalRequest = {\r\n      id: account,\r\n      links,\r\n      description,\r\n    };\r\n    try {\r\n      if (doRequestExist) {\r\n        const res = await axios.patch(url_get, ApprovalRequest);\r\n        // console.log(res);\r\n      } else {\r\n        const res = await axios.post(url_post, ApprovalRequest);\r\n      }\r\n\r\n      // console.log(res.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Request for Approval</h2>\r\n      <Form onSubmit={sendApprovalRequest}>\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"Twitter\"\r\n          value={links.twitter}\r\n          onChange={(e) =>\r\n            setLinks({\r\n              ...links,\r\n              twitter: e.target.value,\r\n            })\r\n          }\r\n        />\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"Instagram\"\r\n          value={links.instagram}\r\n          onChange={(e) =>\r\n            setLinks({\r\n              ...links,\r\n              instagram: e.target.value,\r\n            })\r\n          }\r\n        />\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={links.email}\r\n          onChange={(e) =>\r\n            setLinks({\r\n              ...links,\r\n              email: e.target.value,\r\n            })\r\n          }\r\n        />\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"Website\"\r\n          value={links.website}\r\n          onChange={(e) =>\r\n            setLinks({\r\n              ...links,\r\n              website: e.target.value,\r\n            })\r\n          }\r\n        />\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"Other\"\r\n          value={links.other}\r\n          onChange={(e) =>\r\n            setLinks({\r\n              ...links,\r\n              other: e.target.value,\r\n            })\r\n          }\r\n        />\r\n        <TextArea\r\n          type=\"text\"\r\n          // cols=\"100\"\r\n          // rows=\"5\"\r\n          wrap=\"true\"\r\n          maxLength={1000}\r\n          required\r\n          placeholder=\"What do you intend to do?\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n\r\n        <button className=\"btn\">\r\n          {Loading ? (\r\n            <ReactLoading type={\"bubbles\"} height={30} width={30} />\r\n          ) : (\r\n            <h3>Send</h3>\r\n          )}\r\n        </button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RequestForApproval;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({\r\n  isAuth,\r\n  component: Component,\r\n  extraComponent: ExtraComponent,\r\n  account,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        // console.log('account in protected route: ', account);\r\n        if (account) {\r\n          if (isAuth) {\r\n            return <Component props={props} />;\r\n          } else {\r\n            return <ExtraComponent />;\r\n          }\r\n        } else {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaTwitter, FaDiscord, FaInstagram, FaGithub } from \"react-icons/fa\";\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"social\">\r\n        {/* <a target=\"_blank\" href=\"www.twitter.com\"><h4>Twitter</h4></a> */}\r\n        <Link to={{ pathname: \"https://twitter.com/prntsio\" }} target=\"_blank\">\r\n          <FaTwitter size={38} className=\"footer-logo\" />\r\n        </Link>\r\n        <Link\r\n          to={{ pathname: \"https://discord.com/invite/tYcBEp4rgR\" }}\r\n          target=\"_blank\"\r\n        >\r\n          <FaDiscord size={38} className=\"footer-logo\" />\r\n        </Link>\r\n        <Link\r\n          to={{ pathname: \"https://www.instagram.com/prnts.io/\" }}\r\n          target=\"_blank\"\r\n        >\r\n          <FaInstagram size={38} className=\"footer-logo\" />\r\n        </Link>\r\n        {/* <Link to={{ pathname: \"https://github.com\" }} target=\"_blank\">\r\n          <FaGithub size={38} className=\"footer-logo\" />\r\n        </Link> */}\r\n      </div>\r\n      <div className=\"terms\">\r\n        <div className=\"terms-right\">\r\n          {/* <Link to=\"\">\r\n            <h4>Terms of Service</h4>\r\n          </Link>\r\n          <Link to=\"\">\r\n            <h4>Privacy</h4>\r\n          </Link>\r\n          <Link to=\"\">\r\n            <h4>Help</h4>\r\n          </Link> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./NotApproved.css\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nconst NotApproved = ({ account }) => {\r\n  const [isRequestSent, setIsRequestSent] = useState(false);\r\n  useEffect(() => {\r\n    const getIsRequestSent = async () => {\r\n      const url = `https://prnts-nfts.herokuapp.com/api/approvalRequests/${account}`;\r\n      const { data } = await axios.get(url);\r\n      setIsRequestSent(data.isRequestSent);\r\n    };\r\n    getIsRequestSent();\r\n  }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      {isRequestSent ? (\r\n        <div style={{ marginBottom: \"20px\" }}>\r\n          We are processing your request...\r\n        </div>\r\n      ) : null}\r\n\r\n      <div className=\"btn approval-request\">\r\n        <Link to={`/profile/${account}/request-for-approval`}>\r\n          <h3>\r\n            {isRequestSent ? (\r\n              <span>Edit Request</span>\r\n            ) : (\r\n              <span>Send a Approval Request</span>\r\n            )}\r\n          </h3>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotApproved;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}